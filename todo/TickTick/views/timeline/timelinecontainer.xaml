<UserControl x:Class="ticktick_WPF.Views.Timeline.TimelineContainer"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:misc="clr-namespace:ticktick_WPF.Views.Misc"
             xmlns:tl="clr-namespace:ticktick_WPF.Views.Timeline"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:resource="clr-namespace:ticktick_WPF.Resource"
             xmlns:views="clr-namespace:ticktick_WPF.Views"
             xmlns:wpf="clr-namespace:Emoji.Wpf;assembly=Emoji.Wpf"
             Name="Root" Background="{DynamicResource ShowAreaBackground}">
  <FrameworkElement.Resources>
    <tl:TimelineYearClipConverter x:Key="TimelineYearClipConverter"/>
    <tl:MainScrollClipConverter x:Key="MainScrollClipConverter"/>
    <tl:TimelineRangeNameConverter x:Key="TimelineRangeNameConverter"/>
    <Style x:Key="RadiusBtnLikeBorder" TargetType="{x:Type Border}">
      <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
      <Setter Property="Border.CornerRadius" Value="12"/>
      <Setter Property="Border.BorderBrush" Value="{DynamicResource BaseColorOpacity10_20}"/>
      <Setter Property="Border.BorderThickness" Value="1"/>
      <Style.Triggers>
        <Trigger Property="UIElement.IsMouseOver" Value="true">
          <Setter Property="Border.Background" Value="{DynamicResource BaseColorOpacity5}"/>
        </Trigger>
      </Style.Triggers>
    </Style>
  </FrameworkElement.Resources>
  <Grid ClipToBounds="true">
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="36"/>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="*"/>
    </Grid.RowDefinitions>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="*"/>
      <ColumnDefinition Width="0"/>
    </Grid.ColumnDefinitions>
    <Border Background="Transparent" Grid.Row="0" Grid.RowSpan="3" Grid.Column="0" Grid.ColumnSpan="2"/>
    <tl:TimelineNavBar x:Name="TimelineNavBar" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="0 24 0 0"
                       VerticalAlignment="Top" DataContext="{Binding .}"/>
    <Grid Row="1" Column="0" ColumnSpan="2">
      <Border Margin="10 0 0 0" VerticalAlignment="Center" HorizontalAlignment="Left"
              Width="{Binding YearNameWidth}" Height="{Binding ElementName=OptionPanel, Path=ActualHeight}">
        <Border VerticalAlignment="Center" HorizontalAlignment="Left">
          <TextBlock Foreground="{DynamicResource BaseColorOpacity40}" FontSize="12" VerticalAlignment="Center"
                     HorizontalAlignment="Right" Margin="0 0 6 0" Text="{Binding YearName}"/>
        </Border>
      </Border>
      <ScrollViewer Name="YearScroll" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Disabled"
                    VerticalAlignment="Center" HorizontalAlignment="Left"
                    Height="{Binding ElementName=OptionPanel, Path=ActualHeight}">
        <UIElement.Clip>
          <MultiBinding Converter="{StaticResource TimelineYearClipConverter}">
            <Binding ElementName="Root" Path="ActualWidth"/>
            <Binding>
              <Binding.Source>
                <system:Double>0</system:Double>
              </Binding.Source>
            </Binding>
            <Binding ElementName="OptionPanel" Path="ActualWidth"/>
            <Binding ElementName="OptionPanel" Path="ActualHeight"/>
          </MultiBinding>
        </UIElement.Clip>
        <ItemsControl Width="{Binding Width}" ItemsSource="{Binding YearModels}">
          <ItemsControl.ItemTemplate>
            <DataTemplate>
              <TextBlock FontSize="12" Foreground="{DynamicResource BaseColorOpacity40}" VerticalAlignment="Center"
                         HorizontalAlignment="Left" Visibility="{Binding Visibility}" Text="{Binding YearName}"/>
            </DataTemplate>
          </ItemsControl.ItemTemplate>
          <ItemsControl.ItemContainerStyle>
            <Style TargetType="{x:Type ContentPresenter}">
              <Setter Property="FrameworkElement.Height" Value="{Binding ElementName=OptionPanel, Path=ActualHeight}"/>
              <Setter Property="Canvas.Left" Value="{Binding Left}"/>
            </Style>
          </ItemsControl.ItemContainerStyle>
          <ItemsControl.ItemsPanel>
            <ItemsPanelTemplate>
              <Canvas/>
            </ItemsPanelTemplate>
          </ItemsControl.ItemsPanel>
        </ItemsControl>
      </ScrollViewer>
    </Grid>
    <StackPanel Name="OptionPanel" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal"
                VerticalAlignment="Center" HorizontalAlignment="Right">
      <Border MouseLeftButtonUp="OnGotoTodayMouseUp" Height="24" Style="{StaticResource RadiusBtnLikeBorder}"
              IsEnabled="{Binding GotoBtnEnabled}">
        <TextBlock Text="{StaticResource Today}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="12"
                   Foreground="{DynamicResource BaseColorOpacity100_80}" Margin="12, 0"/>
      </Border>
      <Border MouseLeftButtonUp="OnSwitchRangeMouseUp" Name="SwitchRangeBorder" Height="24" Margin="8 0 12 0"
              Style="{StaticResource RadiusBtnLikeBorder}">
        <StackPanel Margin="12, 0" Orientation="Horizontal">
          <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="12"
                     Foreground="{DynamicResource BaseColorOpacity100_80}" Margin="0 0 3 0"
                     Text="{Binding TimelineRange, Converter={StaticResource TimelineRangeNameConverter}}"/>
          <Path Width="12" Height="12" Stretch="Uniform" Fill="{DynamicResource BaseColorOpacity40}"
                Data="{Binding Source={StaticResource ArrowLine}, Path=Data}"/>
        </StackPanel>
      </Border>
      <misc:EscPopup x:Name="SelectRangePopup" Placement="Bottom" HorizontalOffset="-75" VerticalOffset="-8"
                     StaysOpen="false" AllowsTransparency="true"
                     PlacementTarget="{Binding ElementName=SwitchRangeBorder}">
        <ContentControl Style="{StaticResource PopupContentStyle}" MinWidth="0">
          <StackPanel Name="SelectRangeStackPanel" Width="100">
            <misc:OptionCheckBox Clicked="OnSwitchRangeClick" Tag="{x:Static tl:TimelineConstants.RangeDay}"
                                 Text="{StaticResource TimelineDay}"/>
            <misc:OptionCheckBox Clicked="OnSwitchRangeClick" Tag="{x:Static tl:TimelineConstants.RangeWeek}"
                                 Text="{StaticResource TimelineWeek}"/>
            <misc:OptionCheckBox Clicked="OnSwitchRangeClick" Tag="{x:Static tl:TimelineConstants.RangeMonth}"
                                 Text="{StaticResource TimelineMonth}"/>
          </StackPanel>
        </ContentControl>
      </misc:EscPopup>
    </StackPanel>
    <Grid Row="2" Column="0" ColumnSpan="2" VerticalAlignment="Top" HorizontalAlignment="Left"
          Height="{Binding HeadHeight}">
      <Border MouseDown="OnMouseLeftDown" MouseLeftButtonUp="OnMouseLeftUp" MouseMove="OnMouseMove"
              PreviewMouseWheel="OnPreviewMouseWheel" Background="Transparent"/>
      <ScrollViewer Name="DayLineScroll" IsHitTestVisible="false" VerticalScrollBarVisibility="Disabled"
                    HorizontalScrollBarVisibility="Hidden">
        <UIElement.OpacityMask>
          <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
            <GradientBrush.GradientStops>
              <GradientStop Color="#00000000" Offset="0"/>
              <GradientStop Color="#00000000"
                            Offset="{Binding ElementName=DayLineScroll, Path=ActualWidth, Converter={StaticResource MathConverter}, ConverterParameter=20/@VALUE}"/>
              <GradientStop Color="#FF000000"
                            Offset="{Binding ElementName=DayLineScroll, Path=ActualWidth, Converter={StaticResource MathConverter}, ConverterParameter=40/@VALUE}"/>
              <GradientStop Color="#FF000000"
                            Offset="{Binding ElementName=DayLineScroll, Path=ActualWidth, Converter={StaticResource MathConverter}, ConverterParameter=1-(40/@VALUE)}"/>
              <GradientStop Color="#00000000"
                            Offset="{Binding ElementName=DayLineScroll, Path=ActualWidth, Converter={StaticResource MathConverter}, ConverterParameter=1-(20/@VALUE)}"/>
              <GradientStop Color="#00000000" Offset="1"/>
            </GradientBrush.GradientStops>
          </LinearGradientBrush>
        </UIElement.OpacityMask>
        <Canvas VerticalAlignment="Top" HorizontalAlignment="Left"
                Width="{Binding Width, Converter={StaticResource MathConverter}, ConverterParameter=@VALUE+40}"
                Height="{Binding HeadHeight}">
          <tl:TimelineHeader x:Name="Header" ShowWeekDay="{Binding ShowWeek}"
                             ShowHoliday="{Binding Source={x:Static resource:LocalSettings.Settings}, Path=EnableHoliday}"
                             Width="{Binding Width}" Height="{Binding HeadHeight}" StartEndTuple="{Binding StartEndTuple}"
                             TimelineDayWidthIndex="{Binding TimelineRangeIndex}" OneDayWidth="{Binding OneDayWidth}">
            <tl:TimelineHeader.HoverStartEndTuple>
              <Binding>                <!-- constructor argument:
                     HoverStartEndTuples
                -->

              </Binding>
            </tl:TimelineHeader.HoverStartEndTuple>
          </tl:TimelineHeader>
          <tl:TimelineHeaderHover x:Name="HoverHeader" ShowWeekDay="{Binding ShowWeek}" Width="{Binding Width}"
                                  Height="{Binding HeadHeight}" StartEndTuple="{Binding StartEndTuple}"
                                  TimelineDayWidthIndex="{Binding TimelineRangeIndex}" OneDayWidth="{Binding OneDayWidth}">
            <tl:TimelineHeaderHover.HoverStartEndTuples>
              <Binding>                <!-- constructor argument:
                     HoverStartEndTuples
                -->

              </Binding>
            </tl:TimelineHeaderHover.HoverStartEndTuples>
          </tl:TimelineHeaderHover>
        </Canvas>
      </ScrollViewer>
      <Grid>
        <Border BorderThickness="0 1 0 1" Margin="30 0" BorderBrush="{DynamicResource BaseColorOpacity10}"/>
        <Grid MouseLeftButtonUp="OnPrePageMouseUp" Name="PrePageGrid" Background="Transparent" Cursor="Hand"
              Width="30" VerticalAlignment="Center" HorizontalAlignment="Left"
              IsEnabled="{Binding GotoBtnEnabled}" Height="{Binding HeadHeight}">
          <Border BorderThickness="0 1 0 1" BorderBrush="{DynamicResource BaseColorOpacity10}"/>
          <Path Width="12" Height="12" Stretch="Uniform" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Center"
                HorizontalAlignment="Left" Margin="5 0 0 0"
                Data="{Binding Source={StaticResource ArrowLine}, Path=Data}">
            <FrameworkElement.Style>
              <Style TargetType="{x:Type Path}">
                <Setter Property="Shape.Fill" Value="{DynamicResource BaseColorOpacity40}"/>
                <Style.Triggers>
                  <DataTrigger Binding="{Binding ElementName=PrePageGrid, Path=IsMouseOver}" Value="True">
                    <Setter Property="Shape.Fill" Value="{DynamicResource PrimaryColor}"/>
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </FrameworkElement.Style>
            <UIElement.RenderTransform>
              <RotateTransform Angle="90"/>
            </UIElement.RenderTransform>
          </Path>
        </Grid>
        <Grid MouseLeftButtonUp="OnNextPageMouseUp" Name="NextPageGrid" Cursor="Hand" Background="Transparent"
              Width="30" VerticalAlignment="Center" HorizontalAlignment="Right"
              IsEnabled="{Binding GotoBtnEnabled}" Height="{Binding HeadHeight}">
          <Border BorderThickness="0 1 0 1" BorderBrush="{DynamicResource BaseColorOpacity10}"/>
          <Path Width="12" Height="12" Stretch="Uniform" RenderTransformOrigin="0.5,0.5" Margin="0 0 5 0"
                VerticalAlignment="Center" HorizontalAlignment="Right"
                Data="{Binding Source={StaticResource ArrowLine}, Path=Data}">
            <FrameworkElement.Style>
              <Style TargetType="{x:Type Path}">
                <Setter Property="Shape.Fill" Value="{DynamicResource BaseColorOpacity40}"/>
                <Style.Triggers>
                  <DataTrigger Binding="{Binding ElementName=NextPageGrid, Path=IsMouseOver}" Value="True">
                    <Setter Property="Shape.Fill" Value="{DynamicResource PrimaryColor}"/>
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </FrameworkElement.Style>
            <UIElement.RenderTransform>
              <RotateTransform Angle="-90"/>
            </UIElement.RenderTransform>
          </Path>
        </Grid>
      </Grid>
    </Grid>
    <ScrollViewer SizeChanged="OnMainScrollSizeChanged" ScrollChanged="OnScrollChanged"
                  PreviewMouseWheel="OnPreviewMouseWheel" Name="MainScroll" Grid.Row="3" Grid.Column="0"
                  Style="{StaticResource for_scrollviewer}" HorizontalScrollBarVisibility="Hidden"
                  ClipToBounds="true">
      <UIElement.Clip>
        <MultiBinding Converter="{StaticResource MainScrollClipConverter}">
          <Binding ElementName="MainScroll" Path="ActualWidth"/>
          <Binding ElementName="MainScroll" Path="ActualHeight"/>
          <Binding Path="ShowGroup"/>
          <Binding Path="GroupWidth"/>
          <Binding Path="IsArranging"/>
        </MultiBinding>
      </UIElement.Clip>
      <Grid MouseLeftButtonDown="OnMouseLeftDown" MouseLeftButtonUp="OnMouseLeftUp" MouseMove="OnMouseMove"
            Name="MainGrid" Background="Transparent">
        <tl:TimelineBackground x:Name="TimelineBackground" LineCount="{Binding LineCount}" OneLineHeight="{Binding OneLineHeight}"
                               StartEndTuple="{Binding StartEndTuple}" TimelineDayWidthIndex="{Binding TimelineRangeIndex}"
                               OneDayWidth="{Binding OneDayWidth}">
          <tl:TimelineBackground.GroupDictModels>
            <Binding>              <!-- constructor argument:
                   GroupDictModels
              -->

            </Binding>
          </tl:TimelineBackground.GroupDictModels>
        </tl:TimelineBackground>
        <tl:TimelineVirtualizedCanvas x:Name="CellCanvas" VerticalAlignment="Top" HorizontalAlignment="Left" Height="{Binding Height}"
                                      Width="{Binding Width}" IsReset="{Binding AvailableReset}"
                                      VOffset="{Binding ElementName=MainScroll, Path=VerticalOffset}"
                                      HOffset="{Binding ElementName=MainScroll, Path=HorizontalOffset}"
                                      ViewHeight="{Binding ElementName=MainScroll, Path=ActualHeight}"
                                      ViewWidth="{Binding ElementName=MainScroll, Path=ActualWidth}"
                                      ItemsSource="{Binding AvailableModels}"/>
        <Border Name="BatchSelectBorder" BorderBrush="{DynamicResource BaseColorOpacity20}"
                Background="{DynamicResource BaseColorOpacity5}" CornerRadius="4" Width="0" Height="0"
                Visibility="Collapsed" HorizontalAlignment="Left" VerticalAlignment="Top" BorderThickness="1"/>
      </Grid>
    </ScrollViewer>
    <tl:TimelineCellFloating x:Name="TimelineFloating" Grid.Row="3" Grid.Column="0" VerticalAlignment="Top"
                             HorizontalAlignment="Left" ClipToBounds="true"
                             Width="{Binding ElementName=MainScroll, Path=ActualWidth}"
                             Height="{Binding ElementName=Root, Path=ActualHeight}">
      <UIElement.Clip>
        <MultiBinding Converter="{StaticResource MainScrollClipConverter}">
          <Binding ElementName="MainScroll" Path="ActualWidth"/>
          <Binding ElementName="MainScroll" Path="ActualHeight"/>
          <Binding ElementName="GroupBorder" Path="IsVisible"/>
          <Binding ElementName="GroupBorder" Path="Width"/>
          <Binding ElementName="ArrangePanel" Path="IsVisible"/>
          <Binding Path="Arranging" RelativeSource="{RelativeSource Self}"/>
        </MultiBinding>
      </UIElement.Clip>
    </tl:TimelineCellFloating>
    <tl:TimelineArrange x:Name="ArrangePanel" Grid.Row="3" Grid.Column="0"
                        Width="{x:Static tl:TimelineConstants.ArrangePanelWidth}" HorizontalAlignment="Right"
                        BorderBrush="{DynamicResource BaseColorOpacity10}" BorderThickness="1 0 0 1"
                        Visibility="{Binding IsArranging, Converter={StaticResource BoolVisibleConverter}}"
                        DataContext="{Binding .}"/>
    <Grid Name="GroupBorder" Row="3" Column="0" HorizontalAlignment="Left" Background="Transparent"
          Width="{Binding GroupWidth, Mode=TwoWay}"
          Visibility="{Binding ShowGroup, Converter={StaticResource BoolVisibleConverter}}">
      <Border Width="1" HorizontalAlignment="Right" Background="{DynamicResource BaseColorOpacity10}"/>
      <Thumb DragDelta="OnResizeColumnDragDelta" Margin="0 0 -2 0" Cursor="SizeWE" Opacity="0" Width="3"
             HorizontalAlignment="Right"/>
      <ScrollViewer PreviewMouseWheel="OnPreviewMouseWheel" Name="ColumnScroll"
                    HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Hidden"
                    Height="{Binding ElementName=MainScroll, Path=ActualHeight}">
        <ItemsControl VerticalAlignment="Top" FocusVisualStyle="{x:Null}" Height="{Binding Height}"
                      ItemsSource="{Binding GroupModels}">
          <ItemsControl.ItemTemplate>
            <DataTemplate>
              <tl:TimelineGroup HorizontalAlignment="Left" Height="{Binding Height}"
                                Width="{Binding ElementName=GroupBorder, Path=Width}"
                                PreviewData="{Binding RelativeSource={RelativeSource PreviousData}}"/>
            </DataTemplate>
          </ItemsControl.ItemTemplate>
        </ItemsControl>
      </ScrollViewer>
    </Grid>
    <tl:TimelineToolTip x:Name="ToolTipControl" MouseLeave="OnToolTipPopupMouseLeave" Grid.Column="0" Grid.ColumnSpan="2"
                        Grid.Row="0" Grid.RowSpan="4" VerticalAlignment="Top" HorizontalAlignment="Left"
                        Visibility="Hidden"/>
    <Popup Name="ColumnDragPopup" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0" Grid.RowSpan="4"
           Placement="Relative" HorizontalAlignment="Stretch" AllowsTransparency="true" Cursor="Hand"
           Width="{Binding ElementName=TaskList, Path=ActualWidth}"
           PlacementTarget="{Binding ElementName=TaskList}"
           HorizontalOffset="{Binding ElementName=TaskList, Path=ActualWidth, Mode=OneWay}">
      <ContentControl Style="{DynamicResource PopupContentStyle}">
        <wpf:EmjTextBlock Foreground="{DynamicResource BaseColorOpacity100}" FontSize="13" MaxWidth="240" Margin="8,2"
                          Text="{Binding Title}"/>
      </ContentControl>
    </Popup>
    <Grid Name="ColumnDropLine" Row="3" Visibility="Collapsed" VerticalAlignment="Top" Column="0" Height="8"
          HorizontalAlignment="Left" Width="{Binding GroupWidth, Mode=TwoWay}">
      <Ellipse Height="7" Width="7" Fill="{DynamicResource PrimaryColor}" HorizontalAlignment="Left"
               VerticalAlignment="Center"/>
      <Border Height="1" Background="{DynamicResource PrimaryColor}" VerticalAlignment="Center"/>
    </Grid>
  </Grid>
</UserControl>