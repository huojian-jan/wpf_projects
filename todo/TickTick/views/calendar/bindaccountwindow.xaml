<Window x:Class="ticktick_WPF.Views.Calendar.BindAccountWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ticktick_WPF.Views.Calendar"
        xmlns:converter="clr-namespace:ticktick_WPF.Converter"
        xmlns:views="clr-namespace:ticktick_WPF.Views"
        Loaded="OnWindowLoaded" WindowStartupLocation="CenterOwner"
        Style="{StaticResource OkCancelWindowsStyle}" Title="{StaticResource AddCalDav}" Width="424">
  <UIElement.InputBindings>
    <KeyBinding Key="Escape" Command="{x:Static views:OkCancelWindowCommands.EscCommand}"
                CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type views:IOkCancelWindow}}}"/>
    <KeyBinding Key="Enter" Command="{x:Static views:OkCancelWindowCommands.OkCommand}"
                CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type views:IOkCancelWindow}}}"/>
  </UIElement.InputBindings>
  <FrameworkElement.Resources>
    <converter:EmptyStringToVisibilityConverter x:Key="EmptyStringToVisibilityConverter"/>
    <Style x:Key="LabelStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource Body07}">
      <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
      <Setter Property="FrameworkElement.Margin" Value="20, 0, 8, 0"/>
      <Setter Property="TextBlock.TextAlignment" Value="Center"/>
    </Style>
    <Style x:Key="PlaceholderStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource Tag03}">
      <Setter Property="UIElement.IsHitTestVisible" Value="false"/>
      <Setter Property="FrameworkElement.VerticalAlignment" Value="Center"/>
      <Setter Property="FrameworkElement.Margin" Value="14, 0, 8, 0"/>
      <Setter Property="TextBlock.TextAlignment" Value="Center"/>
    </Style>
  </FrameworkElement.Resources>
  <Grid Margin="0, 52, 20, 0">
    <Grid.RowDefinitions>
      <RowDefinition Height="48"/>
      <RowDefinition Height="48"/>
      <RowDefinition Height="48"/>
      <RowDefinition Height="48"/>
      <RowDefinition/>
      <RowDefinition/>
    </Grid.RowDefinitions>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="Auto"/>
      <ColumnDefinition Width="*"/>
    </Grid.ColumnDefinitions>
    <TextBlock Style="{DynamicResource LabelStyle}">
      <Run x:Name="UserNameRun" Text="{DynamicResource Username}"/>
      <Run Text="*" Foreground="Red"/>
    </TextBlock>
    <TextBox TextChanged="OnTextChanged" Name="UsernameInput" Grid.Row="0" Grid.Column="1" Height="32"
             FontSize="13" Style="{StaticResource SettingTextBoxStyle}" Padding="10,0,28,0"
             Width="{Binding ElementName=PasswordInput, Path=ActualWidth}"/>
    <TextBlock Name="UsernameInputPlaceholder" Grid.Row="0" Grid.Column="1"
               Style="{DynamicResource PlaceholderStyle}" Text="name@example.com"
               Visibility="{Binding Text, ElementName=UsernameInput, Converter={StaticResource EmptyStringToVisibilityConverter}}"/>
    <Border MouseLeftButtonUp="ClearNameText" Height="15" Width="15" VerticalAlignment="Center" Grid.Row="0"
            Grid.Column="1" HorizontalAlignment="Right" Style="{DynamicResource SmoothHoverBorderStyle40_60}"
            Margin="0,1,8,0"
            Visibility="{Binding ElementName=UsernameInput, Path=Text, Converter={StaticResource StringToVisibleConverter}}">
      <Path Width="14" Height="14" Fill="{DynamicResource BaseColorOpacity100}" Stretch="Uniform"
            VerticalAlignment="Center" HorizontalAlignment="Center"
            Data="{Binding Source={StaticResource IcX}, Path=Data}"/>
    </Border>
    <TextBlock Grid.Row="1" Grid.Column="0" Style="{DynamicResource LabelStyle}">
      <Run Text="{DynamicResource Password}"/>
      <Run Text="*" Foreground="Red"/>
    </TextBlock>
    <PasswordBox PasswordChanged="OnPasswordChanged" Name="PasswordInput" Height="32" Grid.Row="1" Grid.Column="1"
                 FontSize="13" BorderThickness="1" Padding="9,0" Tag="{DynamicResource Password}" Cursor="IBeam"
                 CaretBrush="{DynamicResource BaseColorOpacity100_80}">
      <FrameworkElement.Style>
        <Style TargetType="{x:Type PasswordBox}">
          <Setter Property="Control.Foreground" Value="{DynamicResource BaseColorOpacity100_80}"/>
          <Setter Property="Control.Template">
            <Setter.Value>
              <ControlTemplate TargetType="{x:Type PasswordBox}">
                <Border x:Name="border" BorderBrush="#1A05080F" BorderThickness="1" Background="Transparent"
                        CornerRadius="4">
                  <Grid>
                    <ScrollViewer x:Name="PART_ContentHost" Opacity="0.85" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                  </Grid>
                </Border>
                <ControlTemplate.Triggers>
                  <Trigger Property="UIElement.IsFocused" Value="true">
                    <Setter TargetName="border" Value="{DynamicResource PrimaryColor}" Property="Border.BorderBrush"/>
                  </Trigger>
                  <Trigger Property="UIElement.IsFocused" Value="false">
                    <Setter TargetName="border" Value="{StaticResource BaseColorOpacity20}" Property="Border.BorderBrush"/>
                  </Trigger>
                  <Trigger Property="UIElement.IsEnabled" Value="false">
                    <Setter Value="{DynamicResource BaseColorOpacity10_20}" Property="Control.Background"/>
                    <Setter Value="{DynamicResource BaseColorOpacity20}" Property="Control.Foreground"/>
                  </Trigger>
                </ControlTemplate.Triggers>
              </ControlTemplate>
            </Setter.Value>
          </Setter>
        </Style>
      </FrameworkElement.Style>
    </PasswordBox>
    <TextBlock Name="PasswordInputPlaceholder" Grid.Row="1" Grid.Column="1"
               Style="{DynamicResource PlaceholderStyle}" Margin="13,0,0,0"
               Text="{DynamicResource PleaseInputPassword}"/>
    <TextBlock Grid.Row="2" Grid.Column="0" Style="{DynamicResource LabelStyle}">
      <Run Text="{DynamicResource Server}"/>
      <Run x:Name="DomainStarRun" Text="*" Foreground="Red"/>
    </TextBlock>
    <TextBox TextChanged="OnDomainTextChanged" Name="DomainInput" Grid.Row="2" Grid.Column="1" Height="32"
             FontSize="13" Style="{StaticResource SettingTextBoxStyle}" Padding="10,0,28,0"
             IsEnabled="{Binding IsReauthorize, Converter={StaticResource BoolConverseConverter}}"
             Width="{Binding ElementName=PasswordInput, Path=ActualWidth}">
    </TextBox>
    <TextBlock Name="ServerInputPlaceholder" Grid.Row="2" Grid.Column="1"
               Style="{DynamicResource PlaceholderStyle}" Text="example.com"
               Visibility="{Binding Text, ElementName=DomainInput, Converter={StaticResource EmptyStringToVisibilityConverter}}"/>
    <Border MouseLeftButtonUp="ClearDomainText" Height="15" Width="15" VerticalAlignment="Center" Grid.Row="2"
            Grid.Column="1" HorizontalAlignment="Right" Style="{DynamicResource SmoothHoverBorderStyle40_60}"
            Margin="0,1,8,0"
            IsEnabled="{Binding IsReauthorize, Converter={StaticResource BoolConverseConverter}}"
            Visibility="{Binding ElementName=DomainInput, Path=Text, Converter={StaticResource StringToVisibleConverter}}">
      <Path Width="14" Height="14" Fill="{DynamicResource BaseColorOpacity100}" Stretch="Uniform"
            VerticalAlignment="Center" HorizontalAlignment="Center"
            Visibility="{Binding IsReauthorize, Converter={StaticResource VisibleConverter}}"
            Data="{Binding Source={StaticResource IcX}, Path=Data}"/>
    </Border>
    <TextBlock Grid.Row="3" Grid.Column="0" Style="{DynamicResource LabelStyle}"
               Text="{DynamicResource Appellation}"/>
    <TextBox TextChanged="OnTextChanged" Name="DescriptionInput" Grid.Row="3" Grid.Column="1"
             Style="{StaticResource SettingTextBoxStyle}" Height="32" FontSize="13" Padding="11,0,28,0"
             Width="{Binding ElementName=PasswordInput, Path=ActualWidth}"/>
    <TextBlock Name="DescriptionInputPlaceholder" Grid.Row="3" Grid.Column="1"
               Style="{DynamicResource PlaceholderStyle}" Margin="13,0,0,0"
               Text="{DynamicResource MyCalDAVAccount}"
               Visibility="{Binding Text, ElementName=DescriptionInput, Converter={StaticResource EmptyStringToVisibilityConverter}}"/>
    <Border MouseLeftButtonUp="ClearDescText" Height="15" Width="15" VerticalAlignment="Center" Grid.Row="3"
            Grid.Column="1" HorizontalAlignment="Right" Style="{DynamicResource SmoothHoverBorderStyle40_60}"
            Margin="0,1,8,0"
            Visibility="{Binding ElementName=DescriptionInput, Path=Text, Converter={StaticResource StringToVisibleConverter}}">
      <Path Width="14" Height="14" Fill="{DynamicResource BaseColorOpacity100}" Stretch="Uniform"
            VerticalAlignment="Center" HorizontalAlignment="Center"
            Data="{Binding Source={StaticResource IcX}, Path=Data}"/>
    </Border>
    <TextBlock Name="ErrorText" Grid.Row="4" Grid.Column="1" TextWrapping="Wrap" TextAlignment="Left"
               Style="{DynamicResource LabelStyle}" Margin="8, 0" Foreground="#F2262E"/>
    <Grid Row="5" ColumnSpan="2" Column="0" VerticalAlignment="Bottom" Margin="0,28,0,16">
      <Grid HorizontalAlignment="Stretch" Height="32">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="auto"/>
        </Grid.ColumnDefinitions>
        <TextBlock Name="OperationGuide" Grid.Column="0" TextWrapping="Wrap" LineHeight="17" Margin="20,0,0,0"
                   Style="{DynamicResource Body07}" Visibility="Collapsed"
                   Foreground="{DynamicResource BaseColorOpacity60}">
          <Run MouseLeftButtonUp="OpenGuide" Text="{StaticResource OperationGuide}"
               Foreground="{DynamicResource ThemeBlue}" Cursor="Hand"/>
        </TextBlock>
        <Grid Column="1" HorizontalAlignment="Stretch">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
          </Grid.ColumnDefinitions>
          <Button Click="OnCancelClick" Name="CancelButton" Content="{DynamicResource Cancel}"
                  Style="{StaticResource CancelButtonStyle}" Width="120" Margin="8,0,0,0" Grid.Column="0"/>
          <Button Click="OnSaveClick" Name="SaveButton" Content="{DynamicResource OK}" Margin="8,0,0,0"
                  IsEnabled="false" Style="{StaticResource SaveButtonStyle}" Width="120" Grid.Column="1"/>
        </Grid>
      </Grid>
    </Grid>
  </Grid>
</Window>