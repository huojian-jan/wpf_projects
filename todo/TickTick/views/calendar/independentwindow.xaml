<views:MyWindow x:Class="ticktick_WPF.Views.Calendar.IndependentWindow"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                xmlns:views="clr-namespace:ticktick_WPF.Views"
                xmlns:local="clr-namespace:ticktick_WPF.Views.Calendar"
                xmlns:converter="clr-namespace:ticktick_WPF.Converter"
                xmlns:resource="clr-namespace:ticktick_WPF.Resource"
                x:Name="Window" StateChanged="OnStateChanged" Background="{DynamicResource MainBackground}"
                Title="CalendarWindow" Height="450" Width="810"
                Topmost="{Binding Source={x:Static resource:LocalSettings.Settings}, Path=MainWindowTopmost, Mode=OneWay}">
  <FrameworkElement.Resources>
    <converter:MaxButtonConverter x:Key="MaxButtonConverter"/>
    <converter:BackgroundBlurMarginConverter x:Key="BackgroundBlurMarginConverter"/>
  </FrameworkElement.Resources>
  <Grid>
    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
          Margin="{Binding Source={x:Static resource:LocalSettings.Settings}, Path=ThemeImageBlurRadius, Converter={StaticResource BackgroundBlurMarginConverter}}">
      <Border Name="WindowBackground"
              Opacity="{Binding Source={x:Static resource:LocalSettings.Settings}, Path=ThemeImageOpacity}">
        <UIElement.Effect>
          <BlurEffect Radius="{Binding Source={x:Static resource:LocalSettings.Settings}, Path=ThemeImageBlurRadius}"/>
        </UIElement.Effect>
      </Border>
    </Grid>
    <Grid Name="Container">
      <Grid.ColumnDefinitions>
        <ColumnDefinition x:Name="Column1" Width="*" MinWidth="340"/>
        <ColumnDefinition x:Name="Column2" Width="0"/>
      </Grid.ColumnDefinitions>
    </Grid>
    <Border MouseLeftButtonDown="HeaderGridButtonDown" MouseLeftButtonUp="StopDragMove" MouseMove="OnDragMove"
            Background="Transparent" VerticalAlignment="Top" Panel.ZIndex="10">
      <StackPanel HorizontalAlignment="Right" VerticalAlignment="Center" Orientation="Horizontal">
        <Button Click="MinButton_Click" Name="MinButton" Width="46" Height="28" BorderThickness="0"
                Style="{DynamicResource normalButtonStyle}" Background="Transparent">
          <Rectangle Width="10" Height="1" Fill="{DynamicResource BaseColorOpacity60}" VerticalAlignment="Center"
                     Margin="0,1,0,0"/>
        </Button>
        <Button Click="MaxButtonClick" Name="MaxButton" Width="48" Height="28" BorderThickness="0"
                Style="{DynamicResource normalButtonStyle}"
                Background="{Binding ElementName=NormalButton, Path=Background}"
                Visibility="{Binding ElementName=Window, Path=WindowState, Converter={StaticResource MaxButtonConverter}, ConverterParameter=Max, Mode=OneWay}">
          <Path Fill="{DynamicResource BaseColorOpacity60}" Margin="6,-5,0,0"
                Data="{Binding Source={StaticResource ic_svg_path_max}, Path=Data}"/>
        </Button>
        <Button Click="NormalButtonClick" Name="NormalButton" Width="48" Height="28" BorderThickness="0"
                Style="{DynamicResource normalButtonStyle}" Background="Transparent"
                Visibility="{Binding ElementName=Window, Path=WindowState, Converter={StaticResource MaxButtonConverter}, ConverterParameter=Normal, Mode=OneWay}">
          <Path Fill="{DynamicResource BaseColorOpacity100}" Margin="-4,-4,0,0"
                Data="{Binding Source={StaticResource ic_svg_path_normal}, Path=Data}"/>
        </Button>
        <Button Click="OnCloseButtonClick" MouseEnter="OnClickButtonMouseEnter"
                MouseLeave="OnClickButtonMouseLeave" Name="CloseButton" Width="48" Height="28" BorderThickness="0"
                Style="{StaticResource closeButtonStyle}">
          <Border Background="Transparent" Width="45" Height="25">
            <Polygon Name="X" Fill="{DynamicResource BaseColorOpacity60}" Margin="21,1,0,0">
              <Polygon.Points>
                <Binding Source="{StaticResource ic_svg_polygon_close}" Path="Points"/>
              </Polygon.Points>
            </Polygon>
          </Border>
        </Button>
      </StackPanel>
    </Border>
    <Grid Name="ToastGrid" HorizontalAlignment="Center" ZIndex="100" Margin="0,0,0,70"
          VerticalAlignment="Bottom"/>
  </Grid>
</views:MyWindow>