<UserControl x:Class="ticktick_WPF.Views.QuickAdd.AddOptionDialog"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:properties="clr-namespace:ticktick_WPF.Properties"
             xmlns:resource="clr-namespace:ticktick_WPF.Resource"
             xmlns:misc="clr-namespace:ticktick_WPF.Views.Misc"
             Name="Root">
  <ContentControl Style="{DynamicResource PopupContentStyle}">
    <StackPanel MouseMove="ShowPopup" Background="Transparent">
      <FrameworkElement.Resources>
        <Style x:Key="PriorityBorderStyle" TargetType="{x:Type Border}">
          <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
          <Setter Property="Border.Background" Value="Transparent"/>
          <Setter Property="FrameworkElement.Width" Value="26"/>
          <Setter Property="FrameworkElement.Height" Value="26"/>
          <Setter Property="Border.CornerRadius" Value="4"/>
          <Setter Property="Border.BorderBrush" Value="{DynamicResource TabBorderColor}"/>
          <Setter Property="Border.BorderThickness" Value="0"/>
        </Style>
        <Style TargetType="{x:Type TextBlock}">
          <Setter Property="TextBlock.FontSize" Value="12"/>
          <Setter Property="FrameworkElement.Margin" Value="12,6,10,0"/>
          <Setter Property="TextBlock.Foreground" Value="{DynamicResource BaseColorOpacity60}"/>
        </Style>
        <Style TargetType="{x:Type Path}">
          <Setter Property="FrameworkElement.Width" Value="18"/>
          <Setter Property="FrameworkElement.Height" Value="18"/>
          <Setter Property="Shape.Stretch" Value="Uniform"/>
          <Setter Property="Shape.Fill" Value="{DynamicResource BaseColorOpacity40}"/>
        </Style>
        <Style TargetType="{x:Type Line}">
          <Setter Property="Line.X1" Value="0"/>
          <Setter Property="FrameworkElement.Margin" Value="0,6,0,0"/>
          <Setter Property="Shape.StrokeThickness" Value="1"/>
          <Setter Property="Shape.Stroke" Value="{DynamicResource BaseColorOpacity5}"/>
        </Style>
      </FrameworkElement.Resources>
      <TextBlock Text="{StaticResource priority}" Visibility="{Binding ElementName=PriorityGrid, Path=Visibility}"/>
      <Grid Name="PriorityGrid" Margin="8,6,8,0" Height="30" HorizontalAlignment="Left">
        <Grid.ColumnDefinitions>
          <ColumnDefinition/>
          <ColumnDefinition/>
          <ColumnDefinition/>
          <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid MouseLeftButtonUp="PriorityGridClick" Column="0" Margin="6,2" Tag="5">
          <Border>
            <FrameworkElement.Style>
              <Style TargetType="{x:Type Border}" BasedOn="{StaticResource PriorityBorderStyle}">
                <Style.Triggers>
                  <DataTrigger Binding="{Binding ElementName=Root, Path=TabSelectedIndex}" Value="0">
                    <Setter Property="Border.BorderThickness" Value="1"/>
                  </DataTrigger>
                  <DataTrigger Binding="{Binding ElementName=Root, Path=Priority}" Value="5">
                    <Setter Property="Border.Background" Value="{DynamicResource BaseColorOpacity5}"/>
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </FrameworkElement.Style>
          </Border>
          <Image Source="{DynamicResource HighPriorityDrawingImage}" IsHitTestVisible="false"
                 Style="{DynamicResource Icon01}" Opacity="1"/>
        </Grid>
        <Grid MouseLeftButtonUp="PriorityGridClick" Column="1" Margin="6,2" Tag="3">
          <Border>
            <FrameworkElement.Style>
              <Style TargetType="{x:Type Border}" BasedOn="{StaticResource PriorityBorderStyle}">
                <Style.Triggers>
                  <DataTrigger Binding="{Binding ElementName=Root, Path=TabSelectedIndex}" Value="1">
                    <Setter Property="Border.BorderThickness" Value="1"/>
                  </DataTrigger>
                  <DataTrigger Binding="{Binding ElementName=Root, Path=Priority}" Value="3">
                    <Setter Property="Border.Background" Value="{DynamicResource BaseColorOpacity5}"/>
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </FrameworkElement.Style>
          </Border>
          <Image Source="{DynamicResource MidPriorityDrawingImage}" IsHitTestVisible="false"
                 Style="{DynamicResource Icon01}" Opacity="1"/>
        </Grid>
        <Grid MouseLeftButtonUp="PriorityGridClick" Column="2" Margin="6,2" Tag="1">
          <Border>
            <FrameworkElement.Style>
              <Style TargetType="{x:Type Border}" BasedOn="{StaticResource PriorityBorderStyle}">
                <Style.Triggers>
                  <DataTrigger Binding="{Binding ElementName=Root, Path=TabSelectedIndex}" Value="2">
                    <Setter Property="Border.BorderThickness" Value="1"/>
                  </DataTrigger>
                  <DataTrigger Binding="{Binding ElementName=Root, Path=Priority}" Value="1">
                    <Setter Property="Border.Background" Value="{DynamicResource BaseColorOpacity5}"/>
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </FrameworkElement.Style>
          </Border>
          <Image Source="{DynamicResource LowPriorityDrawingImage}" IsHitTestVisible="false"
                 Style="{DynamicResource Icon01}" Opacity="1"/>
        </Grid>
        <Grid MouseLeftButtonUp="PriorityGridClick" Column="3" Margin="6,2" Tag="0">
          <Border>
            <FrameworkElement.Style>
              <Style TargetType="{x:Type Border}" BasedOn="{StaticResource PriorityBorderStyle}">
                <Style.Triggers>
                  <DataTrigger Binding="{Binding ElementName=Root, Path=TabSelectedIndex}" Value="3">
                    <Setter Property="Border.BorderThickness" Value="1"/>
                  </DataTrigger>
                  <DataTrigger Binding="{Binding ElementName=Root, Path=Priority}" Value="0">
                    <Setter Property="Border.Background" Value="{DynamicResource BaseColorOpacity5}"/>
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </FrameworkElement.Style>
          </Border>
          <Image Source="{DynamicResource NonePriorityDrawingImage}" IsHitTestVisible="false"
                 Style="{DynamicResource Icon01}" Opacity="1"/>
        </Grid>
      </Grid>
      <Grid Height="1" Margin="0,6,0,0" Background="{DynamicResource BaseColorOpacity5}"
            Visibility="{Binding ElementName=PriorityGrid, Path=Visibility}"/>
      <TextBlock Text="{StaticResource AddTo}" Margin="12,6,6,6"/>
      <StackPanel Orientation="Vertical" MaxWidth="220">
        <Grid Name="MoveButton">
          <misc:OptionCheckBox x:Name="ProjectButton" Foreground="{DynamicResource BaseColorOpacity100_80}"
                               CanMultiSelected="false" Text="{StaticResource MoveTo}" TextPadding="6,0,26,0" Group="SortType"
                               ShowCheckIcon="false" IconFill="{DynamicResource BaseColorOpacity60}"
                               Icon="{Binding Source={StaticResource IcMovetoLine}, Path=Data}">
            <FrameworkElement.Style>
              <Style TargetType="{x:Type misc:OptionCheckBox}">
                <Setter Property="misc:OptionCheckBox.HoverSelected" Value="false"/>
                <Style.Triggers>
                  <DataTrigger Binding="{Binding ElementName=Root, Path=TabSelectedIndex}" Value="4">
                    <Setter Property="misc:OptionCheckBox.HoverSelected" Value="true"/>
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </FrameworkElement.Style>
          </misc:OptionCheckBox>
          <Polygon Width="12" Height="12" Margin="0,0,8,0" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Center"
                   HorizontalAlignment="Right" Fill="{DynamicResource BaseColorOpacity40}">
            <Polygon.Points>
              <Binding Source="{StaticResource ArrowPolygon}" Path="Points"/>
            </Polygon.Points>
            <UIElement.RenderTransform>
              <RotateTransform Angle="270"/>
            </UIElement.RenderTransform>
          </Polygon>
        </Grid>
        <misc:EscPopup x:Name="SetProjectPopup" StaysOpen="true" Placement="Right" HorizontalOffset="-3"
                       VerticalOffset="-12" PlacementTarget="{Binding ElementName=MoveButton}"/>
        <Grid MouseEnter="OnAssignMouseEnter" Name="AssignBtn" ToolTipService.ShowDuration="400"
              ToolTip="{DynamicResource ProjectInputHint}" Visibility="Collapsed">
          <misc:OptionCheckBox Foreground="{DynamicResource BaseColorOpacity100_80}" CanMultiSelected="false"
                               TextPadding="6,0,26,0" Text="{StaticResource AssignTo}" Group="SortType" ShowCheckIcon="false"
                               IconFill="{DynamicResource BaseColorOpacity60}"
                               Icon="{Binding Source={StaticResource IcAssignToOther}, Path=Data}">
            <FrameworkElement.Style>
              <Style TargetType="{x:Type misc:OptionCheckBox}">
                <Setter Property="misc:OptionCheckBox.HoverSelected" Value="false"/>
                <Style.Triggers>
                  <DataTrigger Binding="{Binding ElementName=Root, Path=TabSelectedIndex}" Value="5">
                    <Setter Property="misc:OptionCheckBox.HoverSelected" Value="true"/>
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </FrameworkElement.Style>
          </misc:OptionCheckBox>
          <Polygon Width="12" Height="12" Margin="0,0,8,0" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Center"
                   HorizontalAlignment="Right" Fill="{DynamicResource BaseColorOpacity40}">
            <Polygon.Points>
              <Binding Source="{StaticResource ArrowPolygon}" Path="Points"/>
            </Polygon.Points>
            <UIElement.RenderTransform>
              <RotateTransform Angle="270"/>
            </UIElement.RenderTransform>
          </Polygon>
        </Grid>
        <misc:EscPopup x:Name="SetAssigneePopup" StaysOpen="true" Placement="Right" HorizontalOffset="-3"
                       VerticalOffset="-12" PlacementTarget="{Binding ElementName=AssignBtn}"/>
        <Grid Name="TagGrid">
          <misc:OptionCheckBox Foreground="{DynamicResource BaseColorOpacity100_80}" CanMultiSelected="false"
                               TextPadding="6,0,26,0" Text="{StaticResource Tags}" Group="SortType" ShowCheckIcon="false"
                               IconFill="{DynamicResource BaseColorOpacity60}"
                               Icon="{Binding Source={StaticResource IcTagLine}, Path=Data}">
            <FrameworkElement.Style>
              <Style TargetType="{x:Type misc:OptionCheckBox}">
                <Setter Property="misc:OptionCheckBox.HoverSelected" Value="false"/>
                <Style.Triggers>
                  <DataTrigger Binding="{Binding ElementName=Root, Path=TabSelectedIndex}" Value="6">
                    <Setter Property="misc:OptionCheckBox.HoverSelected" Value="true"/>
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </FrameworkElement.Style>
          </misc:OptionCheckBox>
          <Polygon Width="12" Height="12" Margin="0,0,8,0" RenderTransformOrigin="0.5,0.5" VerticalAlignment="Center"
                   HorizontalAlignment="Right" Fill="{DynamicResource BaseColorOpacity40}">
            <Polygon.Points>
              <Binding Source="{StaticResource ArrowPolygon}" Path="Points"/>
            </Polygon.Points>
            <UIElement.RenderTransform>
              <RotateTransform Angle="270"/>
            </UIElement.RenderTransform>
          </Polygon>
        </Grid>
        <misc:EscPopup x:Name="SetTagPopup" StaysOpen="true" PopupAnimation="Fade" Placement="Relative"
                       VerticalOffset="-12" PlacementTarget="{Binding ElementName=TagGrid}"
                       HorizontalOffset="{Binding ElementName=TagGrid, Path=ActualWidth}"/>
      </StackPanel>
      <StackPanel Orientation="Vertical">
        <Grid Height="1" Background="{DynamicResource BaseColorOpacity5}"/>
        <misc:OptionCheckBox x:Name="AddTemplateButton" Clicked="OnAddFromTemplateClick"
                             Foreground="{DynamicResource BaseColorOpacity100_80}" CanMultiSelected="false"
                             TextPadding="6,0,26,0" Text="{StaticResource AddFromTemplate}" Group="SortType"
                             ShowCheckIcon="false" IconFill="{DynamicResource BaseColorOpacity60}"
                             Icon="{Binding Source={StaticResource IcTemplate}, Path=Data}">
          <FrameworkElement.Style>
            <Style TargetType="{x:Type misc:OptionCheckBox}">
              <Setter Property="misc:OptionCheckBox.HoverSelected" Value="false"/>
              <Style.Triggers>
                <DataTrigger Binding="{Binding ElementName=Root, Path=TabSelectedIndex}" Value="7">
                  <Setter Property="misc:OptionCheckBox.HoverSelected" Value="true"/>
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </FrameworkElement.Style>
        </misc:OptionCheckBox>
      </StackPanel>
    </StackPanel>
  </ContentControl>
</UserControl>