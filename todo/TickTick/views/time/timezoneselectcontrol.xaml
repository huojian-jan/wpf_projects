<UserControl x:Class="ticktick_WPF.Views.Time.TimeZoneSelectControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:ticktick_WPF.Views.Time"
             xmlns:misc="clr-namespace:ticktick_WPF.Views.Misc"
             Name="Root">
  <FrameworkElement.Resources>
    <Style x:Key="BorderStyle" TargetType="{x:Type Border}">
      <Setter Property="Border.Background" Value="Transparent"/>
      <Setter Property="FrameworkElement.Cursor" Value="Hand"/>
      <Style.Triggers>
        <Trigger Property="UIElement.IsMouseOver" Value="true">
          <Setter Property="Border.Background" Value="{DynamicResource BaseColorOpacity5}"/>
        </Trigger>
      </Style.Triggers>
    </Style>
  </FrameworkElement.Resources>
  <Grid>
    <Grid PreviewMouseLeftButtonUp="ShowPopupClick" Background="Transparent" Cursor="Hand">
      <Grid.ColumnDefinitions>
        <ColumnDefinition/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Border Name="BackBorder" BorderThickness="1" Grid.ColumnSpan="2" CornerRadius="4"
              Height="{Binding ElementName=Root, Path=Height}">
        <FrameworkElement.Style>
          <Style TargetType="{x:Type Border}" BasedOn="{StaticResource HoverBorderStyle}">
            <Setter Property="Border.BorderBrush" Value="{DynamicResource BaseColorOpacity10}"/>
            <Style.Triggers>
              <DataTrigger Binding="{Binding ElementName=OptionPopup, Path=IsOpen}" Value="True">
                <Setter Property="Border.BorderBrush" Value="{DynamicResource PrimaryColor}"/>
              </DataTrigger>
              <DataTrigger Binding="{Binding ElementName=Root, Path=TabSelected}" Value="True">
                <Setter Property="Border.BorderBrush" Value="{DynamicResource TabBorderColor}"/>
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </FrameworkElement.Style>
      </Border>
      <TextBlock Name="SelectedTimeZone" Style="{StaticResource Tag01}" Margin="6,0,0,0" Grid.Column="0"
                 MaxWidth="180" TextTrimming="CharacterEllipsis" HorizontalAlignment="Left" IsHitTestVisible="false"/>
      <Path Name="DropArrow" Fill="{DynamicResource BaseColorOpacity40}" Margin="6,0" Width="12" Height="12"
            Stretch="Uniform" Grid.Column="1" IsHitTestVisible="false"
            Data="{Binding Source={StaticResource ArrowLine}, Path=Data}"/>
    </Grid>
    <Popup Closed="OnPopupClosed" Name="OptionPopup" StaysOpen="false" Placement="Center" VerticalOffset="130"
           AllowsTransparency="true" HorizontalOffset="2" PlacementTarget="{Binding ElementName=Root}">
      <ContentControl Name="DropContent" Style="{StaticResource PopupContentStyle}" Width="244">
        <Grid>
          <StackPanel Margin="14,12">
            <RadioButton Click="SelectTimeZoneCheck" Name="TimeZoneRadio" FontSize="13"
                         Content="{StaticResource FixedTimeZone}" Background="Transparent"
                         Style="{DynamicResource RadioButtonStyle}" Foreground="{DynamicResource BaseColorOpacity100_80}"/>
            <Grid MouseLeftButtonUp="SelectTimeZoneClick" Name="SelectTimeZoneGrid" Cursor="Hand"
                  Background="Transparent" Margin="0,12,0,8"
                  ToolTip="{Binding ElementName=SelectedTimeZoneText, Path=Text}"
                  IsEnabled="{Binding ElementName=TimeZoneRadio, Path=IsChecked}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
              </Grid.ColumnDefinitions>
              <Border BorderThickness="1" Grid.ColumnSpan="2" CornerRadius="4" Height="26">
                <FrameworkElement.Style>
                  <Style TargetType="{x:Type Border}" BasedOn="{StaticResource HoverBorderStyle}">
                    <Setter Property="Border.BorderBrush" Value="{DynamicResource BaseColorOpacity10}"/>
                    <Style.Triggers>
                      <DataTrigger Binding="{Binding ElementName=TimeZonePopup, Path=IsOpen}" Value="True">
                        <Setter Property="Border.BorderBrush" Value="{DynamicResource PrimaryColor}"/>
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </FrameworkElement.Style>
              </Border>
              <Path Fill="{DynamicResource BaseColorOpacity40}" HorizontalAlignment="Right" Width="12" Height="12"
                    Stretch="Fill" Grid.Column="1" Margin="6,0" IsHitTestVisible="false"
                    Data="{Binding Source={StaticResource ArrowLine}, Path=Data}"/>
              <TextBlock Name="SelectedTimeZoneText" IsHitTestVisible="false" Padding="6,0,0,0"
                         TextTrimming="CharacterEllipsis" Grid.Column="0" Style="{DynamicResource Tag01}"/>
            </Grid>
            <misc:EscPopup x:Name="TimeZonePopup" StaysOpen="false" Placement="Bottom" VerticalOffset="-2"
                           HorizontalOffset="-5" PlacementTarget="{Binding ElementName=SelectTimeZoneGrid}">
              <ContentControl Style="{StaticResource PopupContentStyle}" Margin="0,8">
                <Grid Width="{Binding ElementName=SelectTimeZoneGrid, Path=ActualWidth}">
                  <TextBox TextChanged="OnSearchTextChanged" Name="SearchText"
                           Style="{StaticResource HintEditNoBorderTextStyle}" Height="28" Margin="8,0" VerticalAlignment="Top"
                           BorderThickness="0" Padding="28,0,6,0" Tag="{StaticResource Search}"/>
                  <Image Source="{DynamicResource searchDrawingImage}" Style="{StaticResource Icon01}"
                         HorizontalAlignment="Left" Margin="14,6,0,0" VerticalAlignment="Top"/>
                  <Line X1="0" X2="1" Stretch="Fill" StrokeThickness="1" Stroke="{DynamicResource BaseColorOpacity5}"
                        VerticalAlignment="Top" Margin="0,32,0,0"/>
                  <Button Click="ClearText" Name="ClearButton" Height="15" Width="15" VerticalAlignment="Top"
                          HorizontalAlignment="Right" Style="{DynamicResource TransparentButtonStyle}" Margin="0,7,12,0">
                    <Path Width="10" Height="10" Fill="{DynamicResource BaseColorOpacity40}" Stretch="Uniform"
                          VerticalAlignment="Center" HorizontalAlignment="Center"
                          Data="{Binding Source={StaticResource IcX}, Path=Data}"/>
                  </Button>
                  <ListView Name="TimeZoneItems" Style="{DynamicResource ListViewStyle}" Height="155" Margin="0,36,0,0">
                    <ItemsControl.ItemTemplate>
                      <DataTemplate>
                        <Grid>
                          <Border Height="32" Style="{StaticResource BorderStyle}" CornerRadius="4" Margin="4,0"
                                  ToolTip="{Binding DisplayName}"
                                  Visibility="{Binding IsSplit, Converter={StaticResource VisibleConverter}}">
                            <TextBlock Padding="10,0,22,0" TextTrimming="CharacterEllipsis" Text="{Binding DisplayName}">
                              <FrameworkElement.Style>
                                <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource Tag01}">
                                  <Setter Property="TextBlock.Foreground" Value="{DynamicResource BaseColorOpacity100}"/>
                                  <Style.Triggers>
                                    <DataTrigger Binding="{Binding Selected}" Value="True">
                                      <Setter Property="TextBlock.Foreground" Value="{DynamicResource PrimaryColor}"/>
                                    </DataTrigger>
                                  </Style.Triggers>
                                </Style>
                              </FrameworkElement.Style>
                            </TextBlock>
                          </Border>
                          <Path Height="10" Width="10" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,10,0"
                                Fill="{StaticResource PrimaryColor}" Stretch="Uniform"
                                Data="{Binding Source={StaticResource IcCheck}, Path=Data}"
                                Visibility="{Binding Selected, Converter={StaticResource BoolVisibleConverter}}"/>
                          <Border Height="1" Margin="0,4" Background="{DynamicResource BaseColorOpacity5}"
                                  Visibility="{Binding IsSplit, Converter={StaticResource BoolVisibleConverter}}"/>
                        </Grid>
                      </DataTemplate>
                    </ItemsControl.ItemTemplate>
                  </ListView>
                </Grid>
              </ContentControl>
            </misc:EscPopup>
            <RadioButton Click="TimeZoneFloatClick" Name="KeepTimeRadio" FontSize="13"
                         Content="{StaticResource TimeRemainsUnchanged}" Background="Transparent"
                         Style="{DynamicResource RadioButtonStyle}" Foreground="{DynamicResource BaseColorOpacity100_80}"
                         Margin="0,10,0,0"/>
            <TextBlock Text="{StaticResource ConsistentTime}" Style="{StaticResource Tag05}" LineHeight="12" Margin="0,5"
                       TextWrapping="Wrap"/>
            <TextBlock PreviewMouseLeftButtonUp="KnowMoreClick" Text="{StaticResource KnowMore}"
                       Style="{StaticResource Tag05}" HorizontalAlignment="Center" Margin="0,12,0,22" Cursor="Hand"
                       Background="Transparent"/>
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
              </Grid.ColumnDefinitions>
              <Button Click="OnSaveClick" Content="{DynamicResource OK}" Grid.Column="0" Width="96"
                      Style="{StaticResource SaveButtonStyle2}" HorizontalAlignment="Left" Focusable="false"/>
              <Button Click="OnCancelClick" Content="{DynamicResource Cancel}" Width="96" Grid.Column="1"
                      Style="{StaticResource CancelButtonStyle2}" HorizontalAlignment="Right" Focusable="false"/>
            </Grid>
          </StackPanel>
        </Grid>
      </ContentControl>
    </Popup>
  </Grid>
</UserControl>