<UserControl x:Class="ticktick_WPF.Views.Config.HotkeyControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:input="clr-namespace:System.Windows.Input;assembly=PresentationCore"
             xmlns:config="clr-namespace:ticktick_WPF.Views.Config"
             Name="Root" FontSize="12" ToolTip="{Binding ToolTip}">
  <Grid DataContextChanged="OnDataContextChanged">
    <TextBox PreviewKeyDown="TbHotkey_OnPreviewKeyDown" PreviewKeyUp="OnKeyUp" LostFocus="OnLostFocus"
             Name="HotkeyTextBox" TabIndex="100" TextAlignment="Left" MinWidth="90" Padding="8,1,20,0"
             HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
             input:InputMethod.IsInputMethodEnabled="false" Visibility="Collapsed"
             FontSize="{Binding ElementName=Root, Path=FontSize}" Tag="{Binding OriginHotKey}"
             Text="{Binding NewHotKey}">
      <FrameworkElement.Style>
        <Style BasedOn="{StaticResource HintEditTextStyle}" TargetType="{x:Type TextBox}">
          <Setter Property="UIElement.Opacity" Value="0"/>
          <Style.Triggers>
            <Trigger Property="UIElement.IsFocused" Value="true">
              <Setter Property="UIElement.Opacity" Value="1"/>
            </Trigger>
          </Style.Triggers>
        </Style>
      </FrameworkElement.Style>
    </TextBox>
    <Border MouseLeftButtonUp="TryFocusInputBox" VerticalAlignment="Stretch" BorderThickness="1"
            HorizontalAlignment="Stretch" Background="Transparent" CornerRadius="4" Cursor="Hand"
            Visibility="{Binding ElementName=HotkeyTextBox, Path=IsFocused, Converter={StaticResource VisibleConverter}}">
      <FrameworkElement.Style>
        <Style TargetType="{x:Type Border}">
          <Setter Property="Border.BorderBrush" Value="{DynamicResource BaseColorOpacity10}"/>
          <Style.Triggers>
            <DataTrigger Binding="{Binding IsKeyValid}" Value="False">
              <Setter Property="Border.BorderBrush" Value="Red"/>
            </DataTrigger>
            <Trigger Property="UIElement.IsMouseOver" Value="true">
              <Setter Property="Border.BorderBrush" Value="{DynamicResource PrimaryColor}"/>
            </Trigger>
          </Style.Triggers>
        </Style>
      </FrameworkElement.Style>
      <TextBlock Name="HotKeyTextBlock" VerticalAlignment="Center" HorizontalAlignment="Center"
                 TextAlignment="Center" Padding="5,0" Text="{Binding OriginHotKey}">
        <FrameworkElement.Style>
          <Style TargetType="{x:Type TextBlock}">
            <Setter Property="TextBlock.Foreground" Value="{DynamicResource BaseColorOpacity80}"/>
            <Style.Triggers>
              <DataTrigger Binding="{Binding IsKeyValid}" Value="False">
                <Setter Property="TextBlock.Foreground" Value="Red"/>
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </FrameworkElement.Style>
      </TextBlock>
    </Border>
    <Grid PreviewMouseLeftButtonDown="OnDeleteMouseDown" Name="DeleteGrid" Width="12" Height="12"
          VerticalAlignment="Center" Margin="0,0,5,0" HorizontalAlignment="Right" Cursor="Hand">
      <FrameworkElement.Style>
        <Style TargetType="{x:Type Grid}">
          <Setter Property="UIElement.Visibility" Value="Hidden"/>
          <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=HotkeyTextBox, Path=IsFocused}" Value="True">
              <Setter Property="UIElement.Visibility" Value="Visible"/>
            </DataTrigger>
          </Style.Triggers>
        </Style>
      </FrameworkElement.Style>
      <Rectangle Width="12" Height="12" RadiusX="6" RadiusY="6" Fill="{DynamicResource BaseColorOpacity20}"
                 VerticalAlignment="Center" HorizontalAlignment="Center"/>
      <Path Width="8" Height="8" Fill="White" Stretch="Uniform" VerticalAlignment="Center"
            HorizontalAlignment="Center" Data="{Binding Source={StaticResource IcX}, Path=Data}"/>
    </Grid>
  </Grid>
</UserControl>