<UserControl x:Class="ticktick_WPF.Views.Filter.ConditionCard"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:converter="clr-namespace:ticktick_WPF.Converter"
             xmlns:viewModels="clr-namespace:ticktick_WPF.ViewModels"
             xmlns:misc="clr-namespace:ticktick_WPF.Views.Misc"
             xmlns:wpf="clr-namespace:Emoji.Wpf;assembly=Emoji.Wpf"
             Name="Card" Background="{DynamicResource WindowBackgroundPrimary}">
  <FrameworkElement.Resources>
    <converter:DotBorderVisibleConverter x:Key="DotBorderVisibleConverter"/>
    <converter:LineBorderVisibleConverter x:Key="LineBorderVisibleConverter"/>
    <converter:TypeContentConverter x:Key="TypeContentConverter"/>
    <converter:FilterColorConverter x:Key="FilterColorConverter"/>
    <converter:DotLineColorConverter x:Key="DotLineColorConverter"/>
    <converter:BackgroundColorConverter x:Key="BackgroudColorConverter"/>
    <converter:FilterTextColorConverter x:Key="FilterTextColorConverter"/>
    <converter:ShowExpiredWarningConverter x:Key="ShowExpiredWarningConverter"/>
  </FrameworkElement.Resources>
  <Grid>
    <Grid Name="NormalGrid" Width="auto" Height="auto" Cursor="Hand" Margin="0,0,10,10">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="auto"/>
        <ColumnDefinition Width="auto"/>
      </Grid.ColumnDefinitions>
      <Grid Width="24" Height="24" HorizontalAlignment="Right" VerticalAlignment="Center"
            ToolTip="{StaticResource FilterExpiredToolTip}" Column="0"
            Visibility="{Binding Content, Converter={StaticResource ShowExpiredWarningConverter}}">
        <Path Cursor="Hand" Width="12" Height="12" Fill="#f9bf13" Stretch="Uniform"
              Data="{Binding Source={StaticResource IconWarning}, Path=Data}"/>
      </Grid>
      <Grid MouseLeftButtonUp="OnClick" Height="30" Column="1" Background="Transparent">
        <Rectangle RadiusX="3" RadiusY="3" Fill="{Binding Type, Converter={StaticResource BackgroudColorConverter}}">
          <FrameworkElement.Style>
            <Style TargetType="{x:Type Rectangle}">
              <Setter Property="Shape.Stroke" Value="{DynamicResource BaseColorOpacity20}"/>
              <Setter Property="Shape.StrokeDashArray" Value="10,0"/>
              <Style.Triggers>
                <DataTrigger Binding="{Binding Type}" Value="InitLogic">
                  <Setter Property="Shape.StrokeDashArray" Value="4,2"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Type}" Value="AddMore">
                  <Setter Property="Shape.Stroke" Value="Transparent"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Type}" Value="LogicAnd">
                  <Setter Property="Shape.Stroke" Value="{DynamicResource LogicAndColor}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Type}" Value="LogicOr">
                  <Setter Property="Shape.Stroke" Value="{DynamicResource LogicOrColor}"/>
                </DataTrigger>
              </Style.Triggers>
            </Style>
          </FrameworkElement.Style>
        </Rectangle>
        <StackPanel Orientation="Horizontal">
          <wpf:EmjTextBlock Margin="10,0,10,0" FontSize="14" TextTrimming="CharacterEllipsis" MaxWidth="350"
                            VerticalAlignment="Center" TextWrapping="Wrap" ClipToBounds="true" Height="18"
                            Foreground="{Binding Type, Converter={StaticResource FilterTextColorConverter}}">
            <wpf:EmjTextBlock.Text>
              <MultiBinding Converter="{StaticResource TypeContentConverter}">
                <Binding Path="Type"/>
                <Binding Path="Content"/>
              </MultiBinding>
            </wpf:EmjTextBlock.Text>
          </wpf:EmjTextBlock>
          <Border MouseLeftButtonUp="OnDeleteClick" Name="DeleteBorder" HorizontalAlignment="Right" Width="12"
                  Cursor="Hand" Margin="0,0,6,0" Style="{DynamicResource SmoothHoverBorderStyle40_100}">
            <Path Name="DeletePath" Width="14" Height="14" Fill="{DynamicResource BaseColorOpacity80}"
                  Stretch="Uniform" VerticalAlignment="Center" HorizontalAlignment="Center"
                  Visibility="{Binding ElementName=Card, Path=IsMouseOver, Converter={StaticResource BoolVisibleConverter}}"
                  Data="{Binding Source={StaticResource IcX}, Path=Data}"/>
          </Border>
        </StackPanel>
      </Grid>
      <misc:EscPopup x:Name="Popup" Grid.Column="0" Width="auto" Height="auto" StaysOpen="false" HorizontalOffset="-5"
                     VerticalOffset="-5"/>
    </Grid>
    <Grid MouseLeftButtonUp="OnKeyWordsGridClick" Name="KeywordsGrid" Visibility="Collapsed" Height="40"
          Width="398" Margin="0,0,0,10">
      <Border Height="36" BorderThickness="1" Background="Transparent" CornerRadius="4">
        <FrameworkElement.Style>
          <Style TargetType="{x:Type Border}">
            <Setter Property="Border.BorderBrush" Value="{DynamicResource BaseColorOpacity20}"/>
            <Style.Triggers>
              <DataTrigger Binding="{Binding ElementName=KeywordsText, Path=IsFocused}" Value="True">
                <Setter Property="Border.BorderBrush" Value="{DynamicResource PrimaryColor}"/>
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </FrameworkElement.Style>
      </Border>
      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition/>
          <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <TextBlock Text="{StaticResource ContentInclude}" Margin="8,0,0,0" Style="{DynamicResource Body02}"/>
        <TextBox TextChanged="OnKeyWordsTextChanged" Name="KeywordsText" Grid.Column="1" FontSize="14"
                 MaxLength="64" Style="{DynamicResource NoBorderTextStyle}"/>
        <Border MouseLeftButtonUp="OnDeleteClick" Grid.Column="2" HorizontalAlignment="Right" Width="12"
                Cursor="Hand" Margin="0,0,6,0" Style="{DynamicResource SmoothHoverBorderStyle40_100}">
          <Path Width="14" Height="14" Fill="{DynamicResource BaseColorOpacity80}" Stretch="Uniform"
                VerticalAlignment="Center" HorizontalAlignment="Center"
                Visibility="{Binding ElementName=DeletePath, Path=Visibility}"
                Data="{Binding Source={StaticResource IcX}, Path=Data}"/>
        </Border>
      </Grid>
    </Grid>
  </Grid>
</UserControl>