<Window x:Class="ticktick_WPF.Views.EditProjectDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:converter="clr-namespace:ticktick_WPF.Converter"
        xmlns:views="clr-namespace:ticktick_WPF.Views"
        xmlns:viewModels="clr-namespace:ticktick_WPF.ViewModels"
        xmlns:misc="clr-namespace:ticktick_WPF.Views.Misc"
        xmlns:markDown="clr-namespace:ticktick_WPF.Views.MarkDown"
        xmlns:custom="clr-namespace:ticktick_WPF.Views.CustomControl"
        xmlns:wpf="clr-namespace:Emoji.Wpf;assembly=Emoji.Wpf"
        xmlns:colorSelector="clr-namespace:ticktick_WPF.Views.Misc.ColorSelector"
        Loaded="OnLoad" MouseLeftButtonUp="OnMouseUp" x:Name="Window" Topmost="false" Title="   "
        WindowStartupLocation="CenterOwner" Style="{StaticResource OkCancelWindowsStyle}" Width="720"
        Height="430">
  <UIElement.InputBindings>
    <KeyBinding Key="Escape" Command="{x:Static views:OkCancelWindowCommands.EscCommand}"
                CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type views:IOkCancelWindow}}}"/>
    <KeyBinding Key="Enter" Command="{x:Static views:OkCancelWindowCommands.OkCommand}"
                CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type views:IOkCancelWindow}}}"/>
  </UIElement.InputBindings>
  <FrameworkElement.Resources>
    <converter:AddListIsHideCheckBoxConverter x:Key="AddListIsHideCheckBoxConverter"/>
    <converter:MutedCheckBoxConverter x:Key="MutedCheckBoxConverter"/>
    <converter:SwitchTeamTextConverter x:Key="SwitchTeamTextConverter"/>
    <converter:TeamNameConverter x:Key="TeamNameConverter"/>
    <converter:UserCountVisibleConverter x:Key="UserCountVisibleConverter"/>
  </FrameworkElement.Resources>
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition/>
      <RowDefinition/>
    </Grid.RowDefinitions>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="*"/>
      <ColumnDefinition Width="*"/>
    </Grid.ColumnDefinitions>
    <TextBlock Name="WTitle" Grid.Row="0" Text="{DynamicResource AddList}"
               Foreground="{DynamicResource BaseColorOpacity100}" FontSize="16" FontWeight="Bold"
               HorizontalAlignment="Center" Margin="0,16,0,0"/>
    <Grid Margin="20,45,20,10">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="134*"/>
        <ColumnDefinition Width="99*"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition MinHeight="66"/>
        <RowDefinition Height="auto"/>
      </Grid.RowDefinitions>
      <Grid Name="InputGrid" ColumnSpan="2" Height="67" VerticalAlignment="Top">
        <markDown:EmojiEditor x:Name="AddListNameTextBox" TextChanged="CheckValid" BorderThickness="1" BorderCorner="6"
                              BorderBackground="Transparent" BorderBrush="{DynamicResource BaseColorOpacity10}" Height="36"
                              Padding="42,0,6,0" WordWrap="false" MaxLength="64" Margin="0,15,0,16" VerticalAlignment="Top"
                              Foreground="{DynamicResource BaseColorOpacity100_80}"
                              Tag="{StaticResource AddOrEditProjectNameTextBoxPreviewText}" Text="{Binding Name, Mode=TwoWay}"/>
        <Grid MouseLeftButtonUp="ShowEmojiSelector" Name="EmojiSelectGrid" HorizontalAlignment="Left" Width="36"
              Height="30" Background="Transparent" Cursor="Hand" Margin="2,19,0,0" VerticalAlignment="Top">
          <Grid Name="ProjectPathGrid">
            <Path Name="ProjectPath" Width="18" Height="18" Fill="{DynamicResource BaseColorOpacity40}"
                  VerticalAlignment="Center" Stretch="Uniform"
                  Data="{Binding Source={StaticResource IcNormalProject}, Path=Data}"
                  Visibility="{Binding ElementName=SetEmojiIcon, Path=IsVisible, Converter={StaticResource VisibleConverter}}"/>
            <Path Name="SetEmojiIcon" Width="18" Height="18" VerticalAlignment="Center" Stretch="Uniform"
                  Data="{Binding Source={StaticResource SetEmojiIcon}, Path=Data}">
              <FrameworkElement.Style>
                <Style TargetType="{x:Type Path}">
                  <Setter Property="Shape.Fill" Value="{DynamicResource BaseColorOpacity40}"/>
                  <Setter Property="UIElement.Visibility" Value="Collapsed"/>
                  <Style.Triggers>
                    <DataTrigger Binding="{Binding ElementName=InputGrid, Path=IsMouseOver}" Value="True">
                      <Setter Property="UIElement.Visibility" Value="Visible"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding ElementName=EmojiSelectPopup, Path=IsOpen}" Value="True">
                      <Setter Property="UIElement.Visibility" Value="Visible"/>
                      <Setter Property="Shape.Fill" Value="{DynamicResource TextAccentColor}"/>
                    </DataTrigger>
                  </Style.Triggers>
                </Style>
              </FrameworkElement.Style>
            </Path>
          </Grid>
          <Line Y1="0" Y2="1" HorizontalAlignment="Right" Stretch="Fill"
                Stroke="{DynamicResource BaseColorOpacity10}" StrokeThickness="1" Margin="0,-3,0,-1"/>
          <wpf:EmjTextBlock x:Name="EmojiText" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="17"
                            Margin="0,-2,0,0" Height="22" Foreground="{DynamicResource BaseColorOpacity100}"/>
        </Grid>
        <misc:EscPopup x:Name="EmojiSelectPopup" StaysOpen="false" HorizontalOffset="-5" VerticalOffset="-20"
                       PopupAnimation="Fade">
          <ContentControl Style="{DynamicResource PopupContentStyle}">
            <views:EmojiSelectControl x:Name="EmojiSelector" EmojiSelected="OnEmojiSelected" Width="310"/>
          </ContentControl>
        </misc:EscPopup>
      </Grid>
      <TextBox Name="HideTextBox" Grid.Column="0" Grid.Row="0" Width="0" IsReadOnly="true"/>
      <TextBlock Name="AddListNameRepeatTextBlock" Foreground="{DynamicResource TextRedColor}"
                 VerticalAlignment="Top" Text="{DynamicResource AddOrEditProjectNameRepeat}" Grid.Row="0"
                 FontSize="12" Visibility="Collapsed" Grid.ColumnSpan="2" Grid.Column="0" Margin="3,56,0,4"/>
      <Grid Row="1" ColumnSpan="2" Column="0" VerticalAlignment="Top">
        <Grid.RowDefinitions>
          <RowDefinition Height="auto"/>
          <RowDefinition Height="auto"/>
          <RowDefinition Height="auto"/>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="80"/>
          <ColumnDefinition/>
          <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <TextBlock Text="{StaticResource Color}" VerticalAlignment="Center" FontSize="13" Margin="4,0"
                   Foreground="{DynamicResource BaseColorOpacity100_80}"/>
        <colorSelector:ColorSelector x:Name="ColorItems" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" Margin="-5,0"
                                     HorizontalAlignment="Left"/>
        <TextBlock Name="TypeText" Text="{StaticResource Type}" VerticalAlignment="Center" FontSize="13"
                   Margin="4,12,0,0" Grid.Row="3" Grid.Column="0"
                   Foreground="{DynamicResource BaseColorOpacity100_80}"/>
        <custom:CustomComboBox x:Name="ProjectTypeComboBox" ItemSelected="OnKindChanged" Height="32" HorizontalAlignment="Left"
                               ColumnSpan="2" Margin="0,12,0,0" Width="230" Row="3" Column="1" VerticalAlignment="Center"/>
        <TextBlock Text="{DynamicResource AddOrEditProjectFolder}" VerticalAlignment="Center" FontSize="13"
                   Margin="4,12,4,0" Grid.Row="2" Grid.Column="0"
                   Foreground="{DynamicResource BaseColorOpacity100_80}"/>
        <custom:CustomComboBox x:Name="ProjectGroupComboBox" ItemSelected="OnGroupSelected" Width="230" Height="32" Row="2"
                               Column="1" ColumnSpan="2" HorizontalAlignment="Left" Margin="0,12,0,0"/>
        <Grid Name="ProjectBelongTo" Column="0" Row="4" Height="auto" ColumnSpan="3" Visibility="Collapsed"
              Margin="0,12,0,0">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="80"/>
            <ColumnDefinition/>
          </Grid.ColumnDefinitions>
          <TextBlock Text="{DynamicResource Workspace}" VerticalAlignment="Center" FontSize="13"
                     Foreground="{DynamicResource BaseColorOpacity100_80}" Margin="4,0" Grid.Row="0" Grid.Column="0"/>
          <StackPanel Name="TeamNamePanel" Grid.Column="1" Orientation="Horizontal" Margin="0,4">
            <TextBlock VerticalAlignment="Center" Style="{DynamicResource Body10}" Margin="4,0"
                       Text="{Binding TeamId, Converter={StaticResource TeamNameConverter}}"/>
            <TextBlock MouseLeftButtonUp="OnSwitchListClick" Name="SwitchListTypeText" VerticalAlignment="Center"
                       Style="{DynamicResource Body10}" Margin="4,0" Cursor="Hand"
                       Foreground="{DynamicResource TextAccentColor}"
                       Text="{Binding TeamId, Converter={StaticResource SwitchTeamTextConverter}}"/>
          </StackPanel>
          <custom:CustomComboBox x:Name="SelectTeamComBox" ItemSelected="OnTeamSelected" Row="0" Height="32" RowSpan="2"
                                 VerticalAlignment="Center" Column="1" HorizontalAlignment="Left" Width="230"/>
          <misc:EscPopup x:Name="SelectAddProjectPopup" Grid.Row="0" Grid.Column="0" StaysOpen="false" Placement="Bottom"
                         HorizontalOffset="-5" VerticalOffset="-5"
                         PlacementTarget="{Binding ElementName=SwitchListTypeText}">
            <ContentControl Style="{DynamicResource PopupContentStyle}">
              <ItemsControl Name="ProjectTypeItems" Background="Transparent">
                <ItemsControl.ItemTemplate>
                  <DataTemplate DataType="viewModels:EntityViewModel">
                    <Button Style="{StaticResource ListButtonStyle}" Content="{Binding Title}" Tag="{Binding Key}"/>
                  </DataTemplate>
                </ItemsControl.ItemTemplate>
              </ItemsControl>
            </ContentControl>
          </misc:EscPopup>
        </Grid>
        <Grid Name="TypeSelectPanel" Margin="4,10,12,0" Height="50" Column="0" Row="1" ColumnSpan="3"
              HorizontalAlignment="Left" Width="256">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="76"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
          </Grid.ColumnDefinitions>
          <TextBlock Text="{StaticResource OmSwitchView}" FontSize="13" HorizontalAlignment="Left" Grid.Column="0"
                     Foreground="{DynamicResource BaseColorOpacity100_80}" VerticalAlignment="Center"/>
          <Border MouseLeftButtonUp="SwitchViewClick" Name="ListBorder" Grid.Column="1" HorizontalAlignment="Left"
                  ToolTip="{StaticResource OmListView}" Width="50" Height="36"
                  Background="{DynamicResource BaseColorOpacity5}" Cursor="Hand" CornerRadius="4" Tag="list"
                  BorderBrush="{DynamicResource PrimaryColor}">
            <Path Name="ListPath" VerticalAlignment="Center" Width="18" Stretch="Uniform"
                  Fill="{DynamicResource BaseColorOpacity60}" HorizontalAlignment="Center"
                  Data="{Binding Source={StaticResource IcListViewModeIcon}, Path=Data}"/>
          </Border>
          <Border MouseLeftButtonUp="SwitchViewClick" Name="KanbanBorder" Grid.Column="2"
                  HorizontalAlignment="Center" ToolTip="{StaticResource OmKanbanView}" Width="50" Height="36"
                  BorderBrush="{DynamicResource PrimaryColor}" Tag="kanban"
                  Background="{DynamicResource BaseColorOpacity5}" Cursor="Hand" CornerRadius="4">
            <Path Name="KanbanPath" Width="18" Stretch="Uniform" Fill="{DynamicResource BaseColorOpacity60}"
                  VerticalAlignment="Center" HorizontalAlignment="Center"
                  Data="{Binding Source={StaticResource IcKanbanViewModeIcon}, Path=Data}"/>
          </Border>
          <Border MouseLeftButtonUp="SwitchViewClick" Name="TimelineBorder" Grid.Column="3"
                  HorizontalAlignment="Right" ToolTip="{StaticResource OmTimelineView}" Width="50" Height="36"
                  BorderBrush="{DynamicResource PrimaryColor}" Tag="timeline"
                  Background="{DynamicResource BaseColorOpacity5}" Cursor="Hand" CornerRadius="4">
            <Path Name="TimelinePath" Width="18" Stretch="Uniform" Fill="{DynamicResource BaseColorOpacity60}"
                  VerticalAlignment="Center" HorizontalAlignment="Center"
                  Data="{Binding Source={StaticResource IcTimelineViewModeIcon}, Path=Data}"/>
          </Border>
          <Border Height="16" Width="16" Background="{DynamicResource WindowBackgroundPrimary}" CornerRadius="8"
                  Grid.Column="3" HorizontalAlignment="Right" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5"
                  IsHitTestVisible="false">
            <UIElement.RenderTransform>
              <TranslateTransform X="4" Y="2"/>
            </UIElement.RenderTransform>
            <Image Name="HeadProImage" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center"
                   Width="12" Height="12" Stretch="Uniform" Source="../../Assets/ProIcon/ic_pro_crown.png"
                   Visibility="Visible"/>
          </Border>
        </Grid>
        <TextBlock Text="{StaticResource Privacy}" VerticalAlignment="Center" FontSize="13" Margin="4,12,4,0"
                   Grid.Row="5" Grid.Column="0" Foreground="{DynamicResource BaseColorOpacity100_80}"
                   Visibility="{Binding ElementName=PrivacyComboBox, Path=Visibility}"/>
        <custom:CustomComboBox x:Name="PrivacyComboBox" ItemSelected="OnPrivacySelected" Height="32" HorizontalAlignment="Left"
                               Margin="0,12,0,0" ColumnSpan="2" Visibility="Collapsed" Width="230" Row="5" Column="1"
                               VerticalAlignment="Center"/>
        <Grid Row="6" Column="0" ColumnSpan="3" Margin="4,20,0,0">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition/>
          </Grid.ColumnDefinitions>
          <CheckBox Name="AddListIsHideCheckBox" Style="{StaticResource SimpleCheckBoxStyle}"
                    HorizontalAlignment="Left" Grid.Column="0" Grid.Row="0"
                    IsChecked="{Binding InAll, Mode=TwoWay, Converter={StaticResource AddListIsHideCheckBoxConverter}}"/>
          <TextBlock FontSize="13" VerticalAlignment="Center" Foreground="{DynamicResource BaseColorOpacity100_80}"
                     Text="{DynamicResource NotShowInSmart}" Margin="4,0" Grid.Column="1"/>
          <Border Grid.Column="2" HorizontalAlignment="Left" Background="Transparent"
                  ToolTipService.BetweenShowDelay="1000" ToolTipService.InitialShowDelay="400"
                  ToolTip="{StaticResource AddOrEditProjectHideContent}">
            <Path Width="16" Height="16" Stretch="Uniform" Fill="{DynamicResource BaseColorOpacity40}"
                  Data="{Binding Source={StaticResource IcHelp}, Path=Data}"/>
          </Border>
        </Grid>
        <Grid Name="MutedGrid" Row="7" Column="0" ColumnSpan="3" Margin="4,16,0,0" Visibility="Collapsed">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition/>
          </Grid.ColumnDefinitions>
          <CheckBox Name="MutedCheckBox" Style="{StaticResource SimpleCheckBoxStyle}" HorizontalAlignment="Left"
                    IsChecked="{Binding Muted, Mode=TwoWay, Converter={StaticResource MutedCheckBoxConverter}}"/>
          <TextBlock FontSize="13" VerticalAlignment="Center" Foreground="{DynamicResource BaseColorOpacity100_80}"
                     Text="{DynamicResource Muted}" Grid.Column="1" Margin="4,0"/>
          <Border Grid.Column="2" HorizontalAlignment="Left" Background="Transparent"
                  ToolTipService.BetweenShowDelay="1000" ToolTipService.InitialShowDelay="400"
                  ToolTip="{StaticResource MutedContent}">
            <Path Width="16" Height="16" Stretch="Uniform" Fill="{DynamicResource BaseColorOpacity40}"
                  Data="{Binding Source={StaticResource IcHelp}, Path=Data}"/>
          </Border>
        </Grid>
      </Grid>
    </Grid>
    <Grid VerticalAlignment="Top" Height="56" Row="1" Column="0">
      <Button Click="OnCancelClick" Content="{DynamicResource Cancel}" HorizontalAlignment="Right"
              Style="{StaticResource CancelButtonStyle}" Margin="0,0,14,0" Width="80"/>
      <Button Click="OnSaveClick" Name="SaveButton" Content="{DynamicResource PublicSave}"
              HorizontalAlignment="Right" Style="{StaticResource SaveButtonStyle}" Margin="0,0,108,0" Width="80"/>
    </Grid>
    <Grid Column="1" Row="0" RowSpan="2">
      <Border Name="BackBorder" Background="{DynamicResource PrimaryColor}" Opacity="0.05" CornerRadius="0,6,6,0"/>
      <Grid VerticalAlignment="Center" Margin="40,0,0,0" HorizontalAlignment="Right" Height="276" Width="304">
        <Image Name="ViewModeDisplayBorder" Height="276" Width="304" VerticalAlignment="Center"
               HorizontalAlignment="Stretch"/>
        <wpf:EmjTextBlock x:Name="DisplayName" FontSize="8" Foreground="{DynamicResource BaseColorOpacity100}" MaxWidth="190"
                          TextTrimming="CharacterEllipsis" HorizontalAlignment="Left" Margin="22,12.5,0,0"/>
        <Border BorderBrush="{DynamicResource BaseColorOpacity5}" BorderThickness="1,1,0,1"
                CornerRadius="10,0,0,10"/>
      </Grid>
    </Grid>
  </Grid>
</Window>