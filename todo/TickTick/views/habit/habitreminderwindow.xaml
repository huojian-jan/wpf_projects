<views:MyWindow x:Class="ticktick_WPF.Views.Habit.HabitReminderWindow"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                xmlns:habit="clr-namespace:ticktick_WPF.Views.Habit"
                xmlns:converter="clr-namespace:ticktick_WPF.Converter"
                xmlns:wpf="clr-namespace:Emoji.Wpf;assembly=Emoji.Wpf"
                xmlns:customControl="clr-namespace:ticktick_WPF.Views.CustomControl"
                xmlns:views="clr-namespace:ticktick_WPF.Views"
                WindowStyle="None" ShowInTaskbar="false" AllowsTransparency="true" Topmost="true"
                Title="ReminderWindow" Width="324" HorizontalAlignment="Left" Height="172" Background="Transparent"
                Opacity="0" Cursor="Hand">
  <UIElement.Effect>
    <DropShadowEffect BlurRadius="10" Opacity="0.3" ShadowDepth="0"/>
  </UIElement.Effect>
  <FrameworkElement.Resources>
    <converter:RatioBarWidthConverter x:Key="RatioBarWidthConverter"/>
    <converter:RatioBarVisibilityConverter x:Key="RatioBarVisibilityConverter"/>
  </FrameworkElement.Resources>
  <Border Name="ContainerBorder" Background="{DynamicResource WindowBackgroundPrimary}"
          RenderTransformOrigin="0.5,0" Margin="10" CornerRadius="12" Height="152">
    <UIElement.RenderTransform>
      <ScaleTransform/>
    </UIElement.RenderTransform>
    <Grid>
      <Grid.RowDefinitions>
        <RowDefinition Height="36"/>
        <RowDefinition/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <Grid Row="0">
        <Image Name="WindowIcon" Width="16" Height="16" HorizontalAlignment="Left" VerticalAlignment="Top"
               Margin="14,14,0,0" Stretch="Uniform"/>
        <TextBlock Name="TimeText" Margin="38,14,10,0" FontSize="12" Foreground="{DynamicResource ThemeBlue}"
                   VerticalAlignment="Top"/>
        <Border PreviewMouseDown="OnPreviewMouseDown" Background="Transparent"/>
        <Border MouseLeftButtonUp="OnFocusClick" Name="FocusIcon" VerticalAlignment="Top" Height="20" Width="20"
                HorizontalAlignment="Right" Style="{DynamicResource HoverBorderStyle}" Margin="12,12,42,0"
                Visibility="Collapsed">
          <Path Width="14" Height="14" Fill="{DynamicResource BaseColorOpacity60}" Stretch="Uniform"
                Data="{Binding Source={StaticResource IcFocus}, Path=Data}"/>
        </Border>
        <Border MouseLeftButtonUp="OnCloseIconClick" VerticalAlignment="Top" Height="20" Width="20"
                HorizontalAlignment="Right" Style="{DynamicResource HoverBorderStyle}" Margin="12,12,14,0">
          <Path Width="14" Height="14" Fill="{DynamicResource BaseColorOpacity60}" Stretch="Uniform"
                Data="{Binding Source={StaticResource IcXPlus}, Path=Data}"/>
        </Border>
      </Grid>
      <StackPanel MouseLeftButtonUp="OnViewDetailClick" Name="Container" Orientation="Vertical" Margin="14,3,14,0"
                  Grid.Row="1" Background="Transparent">
        <Grid Height="30">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="30"/>
            <ColumnDefinition/>
          </Grid.ColumnDefinitions>
          <Grid Row="0" Width="22" Height="22" HorizontalAlignment="Left" VerticalAlignment="Center">
            <Border CornerRadius="11" BorderBrush="{DynamicResource BaseColorOpacity10}" BorderThickness="1"/>
            <Border CornerRadius="11" Background="{Binding Color}"/>
            <wpf:EmjTextBlock VerticalAlignment="Center" FontSize="14" HorizontalAlignment="Center" Margin="0,1,0,0"
                              Text="{Binding IconText}">
              <FrameworkElement.Style>
                <Style TargetType="{x:Type wpf:EmjTextBlock}">
                  <Setter Property="TextBlock.Foreground" Value="White"/>
                  <Style.Triggers>
                    <DataTrigger Binding="{Binding Color}" Value="{x:Null}">
                      <Setter Property="TextBlock.Foreground" Value="{DynamicResource PrimaryColor}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Color}" Value="">
                      <Setter Property="TextBlock.Foreground" Value="{DynamicResource PrimaryColor}"/>
                    </DataTrigger>
                  </Style.Triggers>
                </Style>
              </FrameworkElement.Style>
            </wpf:EmjTextBlock>
            <Image Name="HabitImage" Width="22" Height="22" Stretch="UniformToFill"/>
          </Grid>
          <wpf:EmjTextBlock x:Name="NameText" Grid.Column="1" HorizontalAlignment="Left" FontSize="14.5" Margin="0,-2,0,0"
                            Foreground="{DynamicResource BaseColorOpacity100}" VerticalAlignment="Center" TextWrapping="Wrap"
                            Height="18" ClipToBounds="true" TextTrimming="CharacterEllipsis" Text="{Binding Name}"/>
        </Grid>
        <StackPanel Name="HabitProgress" Orientation="Vertical" Margin="0,4,0,0">
          <Grid VerticalAlignment="Center">
            <Border Name="BaseBar" Height="6" Background="{DynamicResource BaseColorOpacity5}" CornerRadius="3"/>
            <Border Height="6" CornerRadius="3" HorizontalAlignment="Left">
              <FrameworkElement.Width>
                <MultiBinding Converter="{StaticResource RatioBarWidthConverter}">
                  <Binding Path="CompletedRatio"/>
                  <Binding Path="ActualWidth" ElementName="BaseBar"/>
                </MultiBinding>
              </FrameworkElement.Width>
              <FrameworkElement.Style>
                <Style TargetType="{x:Type Border}">
                  <Setter Property="Border.Background" Value="{Binding Color}"/>
                  <Style.Triggers>
                    <DataTrigger Binding="{Binding Color}" Value="{x:Null}">
                      <Setter Property="Border.Background" Value="{DynamicResource PrimaryColor}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Color}" Value="">
                      <Setter Property="Border.Background" Value="{DynamicResource PrimaryColor}"/>
                    </DataTrigger>
                  </Style.Triggers>
                </Style>
              </FrameworkElement.Style>
            </Border>
          </Grid>
          <TextBlock Name="ProgressText" Margin="2,6,0,8" Style="{StaticResource Body06}" FontSize="11"
                     Foreground="{DynamicResource BaseColorOpacity40}"/>
        </StackPanel>
      </StackPanel>
      <StackPanel Name="ButtonPanel" Orientation="Horizontal" VerticalAlignment="Bottom" Grid.Row="2"
                  Margin="14,0,14,14">
        <Button Click="OnAutoRecordClick" Name="AutoRecordButton" Width="85" Margin="0,0,10,0" FontSize="12"
                Height="28" Style="{StaticResource SaveButtonStyle}" Visibility="Collapsed"/>
        <Button Click="CompleteAllClick" Name="CompleteAllButton" Content="{DynamicResource PublicComplete}"
                Width="133" Margin="0,0,10,0" FontSize="12" Height="28" Visibility="Collapsed"
                Style="{StaticResource SaveButtonStyle}"/>
        <Button Click="OnManuallyRecordClick" Name="ManualRecordButton" Content="{DynamicResource Record}"
                Width="133" Visibility="Collapsed" FontSize="12" Margin="0,0,10,0" Height="28"
                Style="{StaticResource SaveButtonStyle}"/>
        <Button Click="OnManuallyRecordClick" Name="RecordButton" Content="{DynamicResource Record}" Height="28"
                Width="85" Style="{StaticResource CancelButtonStyle}" Margin="0,0,10,0" FontSize="12"
                Visibility="Collapsed"/>
        <Grid Name="ReminderGrid" Width="133" Height="28">
          <customControl:CustomComboBox x:Name="ChooseRemindLaterComboBox" ItemSelected="ReminderSelectionChanged" Height="0"
                                        VerticalAlignment="Top"/>
          <Button Click="RemindLaterButtonClick" Content="{DynamicResource Snooze}" Height="28" FontSize="12"
                  Style="{StaticResource CancelButtonStyle}"/>
        </Grid>
      </StackPanel>
      <Popup Name="ManuallyCheckInPopup" Grid.Row="2" Placement="Top" VerticalOffset="5" HorizontalOffset="-5"
             StaysOpen="false" AllowsTransparency="true">
        <habit:ManualRecordCheckinControl x:Name="CheckInControl"/>
      </Popup>
    </Grid>
  </Border>
</views:MyWindow>