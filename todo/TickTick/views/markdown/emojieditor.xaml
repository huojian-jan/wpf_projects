<UserControl x:Class="ticktick_WPF.Views.MarkDown.EmojiEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:avalonedit="clr-namespace:ICSharpCode.AvalonEdit;assembly=ICSharpCode.AvalonEdit"
             xmlns:local="clr-namespace:ticktick_WPF.Views.MarkDown"
             Name="Root">
  <Border MouseLeftButtonDown="OnBorderMouseUp" Name="TextBorder"
          BorderThickness="{Binding ElementName=Root, Path=BorderThickness}"
          CornerRadius="{Binding ElementName=Root, Path=BorderCorner}">
    <FrameworkElement.Style>
      <Style TargetType="{x:Type Border}">
        <Setter Property="Border.Background" Value="{Binding ElementName=Root, Path=BorderBackground}"/>
        <Setter Property="Border.BorderBrush" Value="{Binding ElementName=Root, Path=BorderBrush}"/>
        <Style.Triggers>
          <DataTrigger Binding="{Binding ElementName=Root, Path=Focused}" Value="True">
            <Setter Property="Border.BorderBrush" Value="{DynamicResource PrimaryColor}"/>
            <Setter Property="Border.Background" Value="Transparent"/>
          </DataTrigger>
          <Trigger Property="UIElement.IsEnabled" Value="false">
            <Setter Property="Border.Background" Value="{DynamicResource BaseColorOpacity5}"/>
            <Setter Property="Border.BorderBrush" Value="{Binding ElementName=Root, Path=BorderBrush}"/>
          </Trigger>
        </Style.Triggers>
      </Style>
    </FrameworkElement.Style>
    <Grid Margin="{Binding ElementName=Root, Path=TextPadding}">
      <TextBlock Name="HintText" Foreground="{DynamicResource BaseColorOpacity40}"
                 FontSize="{Binding ElementName=Root, Path=FontSize}"
                 VerticalAlignment="{Binding ElementName=Root, Path=TextVerticalAlignment}"
                 Padding="{Binding ElementName=Root, Path=Padding}"/>
      <avalonedit:TextEditor PreviewTextInput="OnTextInput" x:Name="EditBox" HorizontalScrollBarVisibility="Disabled"
                             Background="Transparent" VerticalScrollBarVisibility="Disabled"
                             VerticalAlignment="{Binding ElementName=Root, Path=TextVerticalAlignment}"
                             FontSize="{Binding ElementName=Root, Path=FontSize}"
                             Padding="{Binding ElementName=Root, Path=Padding}"
                             Foreground="{Binding ElementName=Root, Path=Foreground}">
        <FrameworkElement.Resources>
          <Style TargetType="{x:Type TextArea}">
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="TextArea.SelectionForeground" Value="{x:Null}"/>
            <Setter Property="TextArea.SelectionCornerRadius" Value="0.0"/>
            <Setter Property="TextArea.SelectionBrush">
              <Setter.Value>
                <SolidColorBrush Color="{DynamicResource {x:Static JetSystemColors.HighlightColorKey}}" Opacity="0.3"/>
              </Setter.Value>
            </Setter>
            <Setter Property="TextArea.SelectionBorder">
              <Setter.Value>
                <Pen Brush="{DynamicResource {x:Static JetSystemColors.HighlightBrushKey}}" Thickness="0"/>
              </Setter.Value>
            </Setter>
          </Style>
          <Style TargetType="{x:Type avalonedit:TextEditor}">
            <Setter Property="Control.Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonedit:TextEditor}">
                  <Border Background="{TemplateBinding Control.Background}"
                          BorderBrush="{TemplateBinding Control.BorderBrush}"
                          BorderThickness="{TemplateBinding Control.BorderThickness}">
                    <ScrollViewer Name="PART_ScrollViewer" Focusable="false" Style="{DynamicResource for_scrollviewer}"
                                  VerticalScrollBarVisibility="{TemplateBinding avalonedit:TextEditor.VerticalScrollBarVisibility}"
                                  HorizontalScrollBarVisibility="{TemplateBinding avalonedit:TextEditor.HorizontalScrollBarVisibility}"
                                  Padding="{TemplateBinding Control.Padding}"
                                  Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TextArea}"/>
                  </Border>
                </ControlTemplate>
              </Setter.Value>
            </Setter>
          </Style>
          <Style TargetType="{x:Type TextView}">
            <Setter Property="FrameworkElement.VerticalAlignment"
                    Value="{Binding ElementName=Root, Path=TextVerticalAlignment}"/>
            <Setter Property="TextView.LineSpacing" Value="4"/>
            <Style.Triggers>
              <DataTrigger Binding="{Binding ElementName=Root, Path=WordWrap}" Value="false">
                <Setter Property="TextView.LineSpacing" Value="1"/>
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </FrameworkElement.Resources>
      </avalonedit:TextEditor>
    </Grid>
  </Border>
</UserControl>