<Window x:Class="ticktick_WPF.Views.Eisenhower.EditQuadrantWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ticktick_WPF.Views.Eisenhower"
        xmlns:filter="clr-namespace:ticktick_WPF.Views.Filter"
        xmlns:views="clr-namespace:ticktick_WPF.Views"
        xmlns:markDown="clr-namespace:ticktick_WPF.Views.MarkDown"
        xmlns:misc="clr-namespace:ticktick_WPF.Views.Misc"
        xmlns:wpf="clr-namespace:Emoji.Wpf;assembly=Emoji.Wpf"
        WindowStartupLocation="CenterOwner" Height="400" Width="470" Topmost="false"
        Style="{DynamicResource OkCancelWindowsStyle}">
  <UIElement.InputBindings>
    <KeyBinding Key="Escape" Command="{x:Static views:OkCancelWindowCommands.EscCommand}"
                CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type views:IOkCancelWindow}}}"/>
    <KeyBinding Key="Enter" Command="{x:Static views:OkCancelWindowCommands.OkCommand}"
                CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type views:IOkCancelWindow}}}"/>
  </UIElement.InputBindings>
  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="56"/>
      <RowDefinition Height="48"/>
      <RowDefinition Height="Auto"/>
      <RowDefinition MinHeight="176"/>
      <RowDefinition Height="Auto"/>
    </Grid.RowDefinitions>
    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal">
      <TextBlock Name="TitleText" FontSize="16" Foreground="{DynamicResource BaseColorOpacity100}" FontWeight="Bold"
                 TextAlignment="Center" TextTrimming="CharacterEllipsis"/>
      <Path Name="ProIcon" Width="16" Height="16" Margin="4,0,0,0" Stretch="Uniform"
            Fill="{DynamicResource TickYellow}" Visibility="Collapsed"
            Data="{Binding Source={StaticResource VipIcon}, Path=Data}"/>
    </StackPanel>
    <Grid Name="InputGrid" Row="1" Margin="0,2,0,0">
      <markDown:EmojiEditor x:Name="QuadrantNameText" PreviewMouseLeftButtonDown="OnInputMouseDown" BorderThickness="1"
                            BorderCorner="4" BorderBackground="{DynamicResource TextBoxBackground}" Margin="20,0,20,0"
                            WordWrap="false" Height="36" Padding="34,1,8,0" VerticalAlignment="Top"
                            Foreground="{DynamicResource BaseColorOpacity100_80}"
                            Tag="{DynamicResource AddOrEditProjectNameTextBoxPreviewText}" MaxLength="64" Text="{Binding Name}"/>
      <Grid MouseLeftButtonUp="ShowEmojiSelector" Name="EmojiSelectGrid" HorizontalAlignment="Left" Width="30"
            Height="30" Background="Transparent" Cursor="Hand" Margin="24,3,0,0" VerticalAlignment="Top">
        <Grid Name="IconGrid" Background="Transparent">
          <Path Name="QuadrantIcon" Width="18" Height="18" VerticalAlignment="Center" Stretch="Uniform"
                Visibility="{Binding ElementName=SetEmojiIcon, Path=IsVisible, Converter={StaticResource VisibleConverter}}"/>
          <Path Name="SetEmojiIcon" Width="24" Height="24" VerticalAlignment="Center" Stretch="Uniform"
                Data="{Binding Source={StaticResource SetEmojiIcon}, Path=Data}">
            <FrameworkElement.Style>
              <Style TargetType="{x:Type Path}">
                <Setter Property="Shape.Fill" Value="{DynamicResource BaseColorOpacity40}"/>
                <Setter Property="UIElement.Visibility" Value="Collapsed"/>
                <Style.Triggers>
                  <DataTrigger Binding="{Binding ElementName=IconGrid, Path=IsMouseOver}" Value="True">
                    <Setter Property="UIElement.Visibility" Value="Visible"/>
                  </DataTrigger>
                  <DataTrigger Binding="{Binding ElementName=EmojiSelectPopup, Path=IsOpen}" Value="True">
                    <Setter Property="UIElement.Visibility" Value="Visible"/>
                    <Setter Property="Shape.Fill" Value="{DynamicResource TextAccentColor}"/>
                  </DataTrigger>
                </Style.Triggers>
              </Style>
            </FrameworkElement.Style>
          </Path>
        </Grid>
        <wpf:EmjTextBlock x:Name="EmojiText" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="18"
                          Margin="0,-2,0,0"/>
      </Grid>
      <misc:EscPopup x:Name="EmojiSelectPopup" StaysOpen="false" HorizontalOffset="-7" VerticalOffset="-2"
                     Placement="Bottom" PopupAnimation="Fade" PlacementTarget="{Binding ElementName=EmojiSelectGrid}">
        <ContentControl Style="{DynamicResource PopupContentStyle}">
          <views:EmojiSelectControl x:Name="EmojiSelector" EmojiSelected="OnEmojiSelected" Width="310"/>
        </ContentControl>
      </misc:EscPopup>
    </Grid>
    <TextBlock Name="ErrorText" Foreground="{DynamicResource TextRedColor}" Margin="20,0,0,0"
               VerticalAlignment="Top" Text="{DynamicResource AddOrEditProjectNameRepeat}" Grid.Row="2"
               FontSize="13" Visibility="Collapsed"/>
    <filter:NormalFilterControl x:Name="FilterControl" RuleChanged="OnRuleChanged" NotifyInvalid="OnNotifyInvalid" Grid.Row="3"
                                CheckValid="true"/>
    <Grid Row="4" VerticalAlignment="Bottom" Height="56">
      <Grid.ColumnDefinitions>
        <ColumnDefinition/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <TextBlock MouseLeftButtonUp="ResetClick" Name="ResetText" Text="{StaticResource RestoreDefault}" Width="auto"
                 Margin="20,0,20,0" FontSize="13" VerticalAlignment="Center" HorizontalAlignment="Left"
                 Cursor="Hand">
        <FrameworkElement.Style>
          <Style TargetType="{x:Type TextBlock}">
            <Setter Property="TextBlock.Foreground" Value="{DynamicResource PrimaryColor}"/>
            <Style.Triggers>
              <Trigger Property="UIElement.IsEnabled" Value="false">
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource BaseColorOpacity40}"/>
              </Trigger>
            </Style.Triggers>
          </Style>
        </FrameworkElement.Style>
      </TextBlock>
      <TextBlock MouseLeftButtonUp="ShowExamples" Name="ExampleText" Text="{StaticResource examples}" Width="auto"
                 Margin="20,0,20,0" FontSize="13" Grid.Column="1" VerticalAlignment="Center"
                 HorizontalAlignment="Left" Cursor="Hand"
                 Visibility="{Binding ElementName=AdvancedFilterControl, Path=Visibility}">
        <FrameworkElement.Style>
          <Style TargetType="{x:Type TextBlock}">
            <Setter Property="TextBlock.Foreground" Value="{DynamicResource BaseColorOpacity40}"/>
            <Style.Triggers>
              <Trigger Property="UIElement.IsMouseOver" Value="true">
                <Setter Property="TextBlock.Foreground" Value="{DynamicResource PrimaryColor}"/>
              </Trigger>
            </Style.Triggers>
          </Style>
        </FrameworkElement.Style>
      </TextBlock>
      <Button Click="SaveBtnClick" Name="SaveButton" Content="{DynamicResource PublicSave}"
              HorizontalAlignment="Right" Style="{StaticResource SaveButtonStyle}" Margin="0,0,8,0"
              Grid.Column="2" Width="100" Height="30"/>
      <Button Click="CancelBtnClick" Content="{DynamicResource Cancel}" HorizontalAlignment="Right"
              Grid.Column="3" Style="{StaticResource CancelButtonStyle}" Margin="0,0,14,0" Width="100"
              Height="30"/>
    </Grid>
  </Grid>
</Window>